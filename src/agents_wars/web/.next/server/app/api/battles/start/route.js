/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/battles/start/route";
exports.ids = ["app/api/battles/start/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/bullmq/dist/esm/classes lazy recursive referencedExports: default":
/*!************************************************************************************************!*\
  !*** ./node_modules/bullmq/dist/esm/classes/ lazy referencedExports: default namespace object ***!
  \************************************************************************************************/
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "(rsc)/./node_modules/bullmq/dist/esm/classes lazy recursive referencedExports: default";
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbattles%2Fstart%2Froute&page=%2Fapi%2Fbattles%2Fstart%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbattles%2Fstart%2Froute.ts&appDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbattles%2Fstart%2Froute&page=%2Fapi%2Fbattles%2Fstart%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbattles%2Fstart%2Froute.ts&appDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_baramsalem_agents_repo_agents_src_agents_wars_web_app_api_battles_start_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/battles/start/route.ts */ \"(rsc)/./app/api/battles/start/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/battles/start/route\",\n        pathname: \"/api/battles/start\",\n        filename: \"route\",\n        bundlePath: \"app/api/battles/start/route\"\n    },\n    resolvedPagePath: \"/Users/baramsalem/agents-repo/agents/src/agents_wars/web/app/api/battles/start/route.ts\",\n    nextConfigOutput,\n    userland: _Users_baramsalem_agents_repo_agents_src_agents_wars_web_app_api_battles_start_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/battles/start/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZiYXR0bGVzJTJGc3RhcnQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJhdHRsZXMlMkZzdGFydCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmJhdHRsZXMlMkZzdGFydCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmJhcmFtc2FsZW0lMkZhZ2VudHMtcmVwbyUyRmFnZW50cyUyRnNyYyUyRmFnZW50c193YXJzJTJGd2ViJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmJhcmFtc2FsZW0lMkZhZ2VudHMtcmVwbyUyRmFnZW50cyUyRnNyYyUyRmFnZW50c193YXJzJTJGd2ViJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1QztBQUNwSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2FnZW50LXdhcnMtd2ViLz8wNDJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9iYXJhbXNhbGVtL2FnZW50cy1yZXBvL2FnZW50cy9zcmMvYWdlbnRzX3dhcnMvd2ViL2FwcC9hcGkvYmF0dGxlcy9zdGFydC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYmF0dGxlcy9zdGFydC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2JhdHRsZXMvc3RhcnRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2JhdHRsZXMvc3RhcnQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYmFyYW1zYWxlbS9hZ2VudHMtcmVwby9hZ2VudHMvc3JjL2FnZW50c193YXJzL3dlYi9hcHAvYXBpL2JhdHRsZXMvc3RhcnQvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2JhdHRsZXMvc3RhcnQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbattles%2Fstart%2Froute&page=%2Fapi%2Fbattles%2Fstart%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbattles%2Fstart%2Froute.ts&appDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/battles/start/route.ts":
/*!****************************************!*\
  !*** ./app/api/battles/start/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _lib_jobs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/jobs */ \"(rsc)/./src/lib/jobs.ts\");\n/* harmony import */ var _lib_queue_bull__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/queue/bull */ \"(rsc)/./src/lib/queue/bull.ts\");\n/* harmony import */ var _lib_runners__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/runners */ \"(rsc)/./src/lib/runners.ts\");\n/* harmony import */ var _lib_llm_guards__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/llm/guards */ \"(rsc)/./src/lib/llm/guards.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n\n\n// import { getConfig } from \"@/lib/config\";\n\n\n// Rate limiting now centralized via guards.rateLimit\nconst runtime = \"nodejs\";\nconst bodySchema = zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().optional(),\n    agentId: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().min(1),\n    provider: zod__WEBPACK_IMPORTED_MODULE_5__.z.enum([\n        \"openai\",\n        \"openrouter\"\n    ]),\n    model: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().min(1),\n    systemPrompt: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().optional(),\n    goal: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().optional(),\n    messageLimit: zod__WEBPACK_IMPORTED_MODULE_5__.z.coerce.number().int().positive().optional(),\n    userMessage: zod__WEBPACK_IMPORTED_MODULE_5__.z.string().trim().optional(),\n    maxTokens: zod__WEBPACK_IMPORTED_MODULE_5__.z.coerce.number().int().positive().optional(),\n    temperature: zod__WEBPACK_IMPORTED_MODULE_5__.z.coerce.number().min(0).max(2).optional()\n});\nasync function POST(req) {\n    try {\n        const requestId = req.headers.get(\"x-request-id\") || (globalThis.crypto?.randomUUID?.() ?? Math.random().toString(36).slice(2));\n        // Derive client IP robustly\n        const xff = req.headers.get(\"x-forwarded-for\") || \"\";\n        const forwardedIp = xff.split(\",\")[0]?.trim();\n        const clientIp = req?.ip || forwardedIp || \"local\";\n        const isE2E = process.env.E2E_MODE === \"1\";\n        if ( true && !isE2E) {\n            try {\n                (0,_lib_llm_guards__WEBPACK_IMPORTED_MODULE_3__.rateLimit)(`start-battle:${clientIp}`);\n            } catch (e) {\n                return new Response(JSON.stringify({\n                    error: \"rate_limited\",\n                    details: String(e?.message || e)\n                }), {\n                    status: 429,\n                    headers: {\n                        \"content-type\": \"application/json\",\n                        \"x-request-id\": requestId\n                    }\n                });\n            }\n        }\n        const json = await req.json();\n        const parsed = bodySchema.safeParse(json);\n        if (!parsed.success) {\n            return new Response(JSON.stringify({\n                error: \"invalid_body\",\n                details: parsed.error.flatten()\n            }), {\n                status: 400,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        const input = parsed.data;\n        // Validate agent existence unless running in local/no-DB mode, test, or e2e\n        const isTest = \"development\" === \"test\";\n        const isLocal = process.env.LOCAL_MODE === \"1\";\n        // already declared above\n        if (!isTest && !isLocal && !isE2E) {\n            try {\n                const agent = await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.agent.findUnique({\n                    where: {\n                        id: input.agentId\n                    }\n                });\n                if (!agent) {\n                    return new Response(JSON.stringify({\n                        error: \"invalid_agent\"\n                    }), {\n                        status: 400,\n                        headers: {\n                            \"content-type\": \"application/json\",\n                            \"x-request-id\": requestId\n                        }\n                    });\n                }\n            } catch  {\n            // If DB is not reachable, fall through to generic error later\n            }\n        }\n        // Support idempotency via client-provided header\n        const idem = req.headers.get(\"x-idempotency-key\")?.trim();\n        const id = input.id ?? (idem && idem.length > 0 ? idem : crypto.randomUUID());\n        const owner = clientIp;\n        const cap = Number(process.env.PER_IP_CONCURRENT_JOBS || 3);\n        if (!(0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.canStartJobForOwner)(owner, cap)) {\n            return new Response(JSON.stringify({\n                error: \"too_many_jobs\"\n            }), {\n                status: 429,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"x-request-id\": requestId\n                }\n            });\n        }\n        const existing = (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.getJob)(id);\n        if (existing) {\n            return new Response(JSON.stringify({\n                id,\n                status: existing.status\n            }), {\n                status: 200,\n                headers: {\n                    \"content-type\": \"application/json\",\n                    \"x-request-id\": requestId\n                }\n            });\n        }\n        if ((0,_lib_queue_bull__WEBPACK_IMPORTED_MODULE_1__.hasRedis)()) {\n            await (0,_lib_queue_bull__WEBPACK_IMPORTED_MODULE_1__.enqueue)({\n                queueName: \"battles\",\n                payload: {\n                    id,\n                    input\n                }\n            });\n            (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.createJob)(id, \"battle\", owner);\n            (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                status: \"running\"\n            });\n            if ( false || isE2E) {\n                (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                    status: \"succeeded\",\n                    data: {\n                        conversationId: \"c1\",\n                        endedReason: \"goal\"\n                    }\n                });\n            }\n        } else {\n            // Fire-and-forget execution with timeout (from centralized config)\n            (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.createJob)(id, \"battle\", owner);\n            if ( false || isE2E) {\n                (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                    status: \"running\"\n                });\n                (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                    status: \"succeeded\",\n                    data: {\n                        conversationId: \"c1\",\n                        endedReason: \"goal\"\n                    }\n                });\n            } else (async ()=>{\n                (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                    status: \"running\"\n                });\n                const cfgTimeoutMs = Number(process.env.REQUEST_TIMEOUT_MS || 60000);\n                const ac = new AbortController();\n                const to = setTimeout(()=>ac.abort(\"timeout\"), cfgTimeoutMs);\n                const startedAt = Date.now();\n                try {\n                    console.log(JSON.stringify({\n                        level: \"info\",\n                        msg: \"battle_started\",\n                        requestId,\n                        id,\n                        clientIp\n                    }));\n                    const result = await (0,_lib_runners__WEBPACK_IMPORTED_MODULE_2__.runBattle)({\n                        runId: id,\n                        agentId: input.agentId,\n                        provider: input.provider,\n                        model: input.model,\n                        systemPrompt: input.systemPrompt,\n                        goal: input.goal,\n                        messageLimit: input.messageLimit,\n                        userMessage: input.userMessage,\n                        maxTokens: input.maxTokens,\n                        temperature: input.temperature\n                    }, undefined, ac.signal);\n                    clearTimeout(to);\n                    (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                        status: \"succeeded\",\n                        data: result\n                    });\n                    console.log(JSON.stringify({\n                        level: \"info\",\n                        msg: \"battle_succeeded\",\n                        requestId,\n                        id,\n                        durationMs: Date.now() - startedAt\n                    }));\n                } catch (err) {\n                    clearTimeout(to);\n                    const msg = String(err?.message ?? err);\n                    (0,_lib_jobs__WEBPACK_IMPORTED_MODULE_0__.updateJob)(id, {\n                        status: msg === \"timeout\" ? \"failed\" : \"failed\",\n                        error: msg\n                    });\n                    console.warn(JSON.stringify({\n                        level: \"warn\",\n                        msg: \"battle_failed\",\n                        requestId,\n                        id,\n                        error: msg,\n                        durationMs: Date.now() - startedAt\n                    }));\n                }\n            })();\n        }\n        return new Response(JSON.stringify({\n            id,\n            status: \"pending\"\n        }), {\n            status: 202,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"x-request-id\": requestId\n            }\n        });\n    } catch  {\n        const requestId = globalThis.crypto?.randomUUID?.() ?? Math.random().toString(36).slice(2);\n        return new Response(JSON.stringify({\n            error: \"internal_error\"\n        }), {\n            status: 500,\n            headers: {\n                \"content-type\": \"application/json\",\n                \"x-request-id\": requestId\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/battles/start/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/config.ts":
/*!***************************!*\
  !*** ./src/lib/config.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __clearConfigCache: () => (/* binding */ __clearConfigCache),\n/* harmony export */   getConfig: () => (/* binding */ getConfig)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n\nconst optionalNonEmpty = (schema)=>zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((v)=>typeof v === \"string\" && v.trim().length === 0 ? undefined : v, schema.optional());\nconst envSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    OPENAI_API_KEY: optionalNonEmpty(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().trim().min(1)),\n    OPENROUTER_API_KEY: optionalNonEmpty(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().trim().min(1)),\n    OPENROUTER_SITE: optionalNonEmpty(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().trim()),\n    ALLOWED_MODELS: optionalNonEmpty(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().trim()),\n    SUMMARIZER_MODEL: optionalNonEmpty(zod__WEBPACK_IMPORTED_MODULE_0__.z.string().trim()),\n    MAX_TOKENS_PER_CALL: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().positive().default(512),\n    MAX_MESSAGES_PER_CONVO: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().positive().default(25),\n    RATE_LIMIT_ENABLED: zod__WEBPACK_IMPORTED_MODULE_0__.z.union([\n        zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()\n    ]).transform((v)=>typeof v === \"string\" ? v.toLowerCase() !== \"false\" : !!v).default(true),\n    RATE_LIMIT_RPM: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().positive().default(60),\n    REQUEST_TIMEOUT_MS: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().int().positive().default(60000),\n    MAX_USD_PER_CONVO: zod__WEBPACK_IMPORTED_MODULE_0__.z.coerce.number().nonnegative().optional()\n}).refine((v)=>Boolean(v.OPENAI_API_KEY || v.OPENROUTER_API_KEY), \"At least one provider key must be set: OPENAI_API_KEY or OPENROUTER_API_KEY\");\nlet cached;\nfunction getConfig() {\n    if (cached) return cached;\n    // In test env, allow missing provider keys by injecting a dummy key\n    const env = {\n        ...process.env\n    };\n    if (false) {}\n    const parsed = envSchema.parse(env);\n    cached = {\n        openaiApiKey: parsed.OPENAI_API_KEY || undefined,\n        openrouterApiKey: parsed.OPENROUTER_API_KEY || undefined,\n        openrouterSite: parsed.OPENROUTER_SITE || undefined,\n        allowedModels: parsed.ALLOWED_MODELS ? parsed.ALLOWED_MODELS.split(\",\").map((s)=>s.trim()).filter(Boolean) : [],\n        summarizerModel: parsed.SUMMARIZER_MODEL || undefined,\n        maxTokensPerCall: parsed.MAX_TOKENS_PER_CALL,\n        maxMessagesPerConversation: parsed.MAX_MESSAGES_PER_CONVO,\n        rateLimitEnabled: parsed.RATE_LIMIT_ENABLED,\n        rateLimitRpm: parsed.RATE_LIMIT_RPM,\n        requestTimeoutMs: parsed.REQUEST_TIMEOUT_MS,\n        maxUsdPerConversation: parsed.MAX_USD_PER_CONVO,\n        redisUrl: env.REDIS_URL || undefined\n    };\n    return cached;\n}\n// Test-only utility to reset cached config between test cases\nfunction __clearConfigCache() {\n    cached = undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0I7QUFFeEIsTUFBTUMsbUJBQW1CLENBQUNDLFNBQ3hCRixrQ0FBQ0EsQ0FBQ0csVUFBVSxDQUNWLENBQUNDLElBQU8sT0FBT0EsTUFBTSxZQUFZQSxFQUFFQyxJQUFJLEdBQUdDLE1BQU0sS0FBSyxJQUFJQyxZQUFZSCxHQUNyRUYsT0FBT00sUUFBUTtBQUduQixNQUFNQyxZQUFZVCxrQ0FBQ0EsQ0FDaEJVLE1BQU0sQ0FBQztJQUNOQyxnQkFBZ0JWLGlCQUFpQkQsa0NBQUNBLENBQUNZLE1BQU0sR0FBR1AsSUFBSSxHQUFHUSxHQUFHLENBQUM7SUFDdkRDLG9CQUFvQmIsaUJBQWlCRCxrQ0FBQ0EsQ0FBQ1ksTUFBTSxHQUFHUCxJQUFJLEdBQUdRLEdBQUcsQ0FBQztJQUMzREUsaUJBQWlCZCxpQkFBaUJELGtDQUFDQSxDQUFDWSxNQUFNLEdBQUdQLElBQUk7SUFDakRXLGdCQUFnQmYsaUJBQWlCRCxrQ0FBQ0EsQ0FBQ1ksTUFBTSxHQUFHUCxJQUFJO0lBQ2hEWSxrQkFBa0JoQixpQkFBaUJELGtDQUFDQSxDQUFDWSxNQUFNLEdBQUdQLElBQUk7SUFDbERhLHFCQUFxQmxCLGtDQUFDQSxDQUFDbUIsTUFBTSxDQUFDQyxNQUFNLEdBQUdDLEdBQUcsR0FBR0MsUUFBUSxHQUFHQyxPQUFPLENBQUM7SUFDaEVDLHdCQUF3QnhCLGtDQUFDQSxDQUFDbUIsTUFBTSxDQUFDQyxNQUFNLEdBQUdDLEdBQUcsR0FBR0MsUUFBUSxHQUFHQyxPQUFPLENBQUM7SUFDbkVFLG9CQUFvQnpCLGtDQUFDQSxDQUNsQjBCLEtBQUssQ0FBQztRQUFDMUIsa0NBQUNBLENBQUNZLE1BQU07UUFBSVosa0NBQUNBLENBQUMyQixPQUFPO0tBQUcsRUFDL0JDLFNBQVMsQ0FBQyxDQUFDeEIsSUFBTyxPQUFPQSxNQUFNLFdBQVdBLEVBQUV5QixXQUFXLE9BQU8sVUFBVSxDQUFDLENBQUN6QixHQUMxRW1CLE9BQU8sQ0FBQztJQUNYTyxnQkFBZ0I5QixrQ0FBQ0EsQ0FBQ21CLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHQyxHQUFHLEdBQUdDLFFBQVEsR0FBR0MsT0FBTyxDQUFDO0lBQzNEUSxvQkFBb0IvQixrQ0FBQ0EsQ0FBQ21CLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHQyxHQUFHLEdBQUdDLFFBQVEsR0FBR0MsT0FBTyxDQUFDO0lBQy9EUyxtQkFBbUJoQyxrQ0FBQ0EsQ0FBQ21CLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHYSxXQUFXLEdBQUd6QixRQUFRO0FBQzdELEdBQ0MwQixNQUFNLENBQ0wsQ0FBQzlCLElBQU0rQixRQUFRL0IsRUFBRU8sY0FBYyxJQUFJUCxFQUFFVSxrQkFBa0IsR0FDdkQ7QUFvQkosSUFBSXNCO0FBRUcsU0FBU0M7SUFDZCxJQUFJRCxRQUFRLE9BQU9BO0lBQ25CLG9FQUFvRTtJQUNwRSxNQUFNRSxNQUFNO1FBQUUsR0FBR0MsUUFBUUQsR0FBRztJQUFDO0lBQzdCLElBQUlDLEtBQWlGLEVBQUUsRUFFdEY7SUFDRCxNQUFNQyxTQUFTL0IsVUFBVWdDLEtBQUssQ0FBQ0g7SUFDL0JGLFNBQVM7UUFDUE0sY0FBY0YsT0FBTzdCLGNBQWMsSUFBSUo7UUFDdkNvQyxrQkFBa0JILE9BQU8xQixrQkFBa0IsSUFBSVA7UUFDL0NxQyxnQkFBZ0JKLE9BQU96QixlQUFlLElBQUlSO1FBQzFDc0MsZUFBZUwsT0FBT3hCLGNBQWMsR0FDaEN3QixPQUFPeEIsY0FBYyxDQUFDOEIsS0FBSyxDQUFDLEtBQ3pCQyxHQUFHLENBQUMsQ0FBQ0MsSUFBY0EsRUFBRTNDLElBQUksSUFDekI0QyxNQUFNLENBQUNkLFdBQ1YsRUFBRTtRQUNOZSxpQkFBaUJWLE9BQU92QixnQkFBZ0IsSUFBSVY7UUFDNUM0QyxrQkFBa0JYLE9BQU90QixtQkFBbUI7UUFDNUNrQyw0QkFBNEJaLE9BQU9oQixzQkFBc0I7UUFDekQ2QixrQkFBa0JiLE9BQU9mLGtCQUFrQjtRQUMzQzZCLGNBQWNkLE9BQU9WLGNBQWM7UUFDbkN5QixrQkFBa0JmLE9BQU9ULGtCQUFrQjtRQUMzQ3lCLHVCQUF1QmhCLE9BQU9SLGlCQUFpQjtRQUMvQ3lCLFVBQVVuQixJQUFJb0IsU0FBUyxJQUFJbkQ7SUFDN0I7SUFDQSxPQUFPNkI7QUFDVDtBQUVBLDhEQUE4RDtBQUN2RCxTQUFTdUI7SUFDZHZCLFNBQVM3QjtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWdlbnQtd2Fycy13ZWIvLi9zcmMvbGliL2NvbmZpZy50cz9hM2VmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5cbmNvbnN0IG9wdGlvbmFsTm9uRW1wdHkgPSAoc2NoZW1hOiB6LlpvZFR5cGVBbnkpID0+XG4gIHoucHJlcHJvY2VzcyhcbiAgICAodikgPT4gKHR5cGVvZiB2ID09PSBcInN0cmluZ1wiICYmIHYudHJpbSgpLmxlbmd0aCA9PT0gMCA/IHVuZGVmaW5lZCA6IHYpLFxuICAgIHNjaGVtYS5vcHRpb25hbCgpLFxuICApO1xuXG5jb25zdCBlbnZTY2hlbWEgPSB6XG4gIC5vYmplY3Qoe1xuICAgIE9QRU5BSV9BUElfS0VZOiBvcHRpb25hbE5vbkVtcHR5KHouc3RyaW5nKCkudHJpbSgpLm1pbigxKSksXG4gICAgT1BFTlJPVVRFUl9BUElfS0VZOiBvcHRpb25hbE5vbkVtcHR5KHouc3RyaW5nKCkudHJpbSgpLm1pbigxKSksXG4gICAgT1BFTlJPVVRFUl9TSVRFOiBvcHRpb25hbE5vbkVtcHR5KHouc3RyaW5nKCkudHJpbSgpKSxcbiAgICBBTExPV0VEX01PREVMUzogb3B0aW9uYWxOb25FbXB0eSh6LnN0cmluZygpLnRyaW0oKSksXG4gICAgU1VNTUFSSVpFUl9NT0RFTDogb3B0aW9uYWxOb25FbXB0eSh6LnN0cmluZygpLnRyaW0oKSksXG4gICAgTUFYX1RPS0VOU19QRVJfQ0FMTDogei5jb2VyY2UubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoKS5kZWZhdWx0KDUxMiksXG4gICAgTUFYX01FU1NBR0VTX1BFUl9DT05WTzogei5jb2VyY2UubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoKS5kZWZhdWx0KDI1KSxcbiAgICBSQVRFX0xJTUlUX0VOQUJMRUQ6IHpcbiAgICAgIC51bmlvbihbei5zdHJpbmcoKSwgei5ib29sZWFuKCldKVxuICAgICAgLnRyYW5zZm9ybSgodikgPT4gKHR5cGVvZiB2ID09PSBcInN0cmluZ1wiID8gdi50b0xvd2VyQ2FzZSgpICE9PSBcImZhbHNlXCIgOiAhIXYpKVxuICAgICAgLmRlZmF1bHQodHJ1ZSksXG4gICAgUkFURV9MSU1JVF9SUE06IHouY29lcmNlLm51bWJlcigpLmludCgpLnBvc2l0aXZlKCkuZGVmYXVsdCg2MCksXG4gICAgUkVRVUVTVF9USU1FT1VUX01TOiB6LmNvZXJjZS5udW1iZXIoKS5pbnQoKS5wb3NpdGl2ZSgpLmRlZmF1bHQoNjAwMDApLFxuICAgIE1BWF9VU0RfUEVSX0NPTlZPOiB6LmNvZXJjZS5udW1iZXIoKS5ub25uZWdhdGl2ZSgpLm9wdGlvbmFsKCksXG4gIH0pXG4gIC5yZWZpbmUoXG4gICAgKHYpID0+IEJvb2xlYW4odi5PUEVOQUlfQVBJX0tFWSB8fCB2Lk9QRU5ST1VURVJfQVBJX0tFWSksXG4gICAgXCJBdCBsZWFzdCBvbmUgcHJvdmlkZXIga2V5IG11c3QgYmUgc2V0OiBPUEVOQUlfQVBJX0tFWSBvciBPUEVOUk9VVEVSX0FQSV9LRVlcIixcbiAgKTtcblxuLy8gTm90ZTogV2UgYXZvaWQgbWVyZ2luZyBkdWUgdG8gWm9kIGVmZmVjdHMgdHlwaW5nOyByZWFkIFJFRElTX1VSTCBkaXJlY3RseSBmcm9tIHByb2Nlc3MuZW52XG5cbmV4cG9ydCB0eXBlIEFwcENvbmZpZyA9IHtcbiAgb3BlbmFpQXBpS2V5Pzogc3RyaW5nO1xuICBvcGVucm91dGVyQXBpS2V5Pzogc3RyaW5nO1xuICBvcGVucm91dGVyU2l0ZT86IHN0cmluZztcbiAgYWxsb3dlZE1vZGVsczogc3RyaW5nW107XG4gIHN1bW1hcml6ZXJNb2RlbD86IHN0cmluZztcbiAgbWF4VG9rZW5zUGVyQ2FsbDogbnVtYmVyO1xuICBtYXhNZXNzYWdlc1BlckNvbnZlcnNhdGlvbjogbnVtYmVyO1xuICByYXRlTGltaXRFbmFibGVkOiBib29sZWFuO1xuICByYXRlTGltaXRScG06IG51bWJlcjtcbiAgcmVxdWVzdFRpbWVvdXRNczogbnVtYmVyO1xuICBtYXhVc2RQZXJDb252ZXJzYXRpb24/OiBudW1iZXI7XG4gIHJlZGlzVXJsPzogc3RyaW5nO1xufTtcblxubGV0IGNhY2hlZDogQXBwQ29uZmlnIHwgdW5kZWZpbmVkO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29uZmlnKCk6IEFwcENvbmZpZyB7XG4gIGlmIChjYWNoZWQpIHJldHVybiBjYWNoZWQ7XG4gIC8vIEluIHRlc3QgZW52LCBhbGxvdyBtaXNzaW5nIHByb3ZpZGVyIGtleXMgYnkgaW5qZWN0aW5nIGEgZHVtbXkga2V5XG4gIGNvbnN0IGVudiA9IHsgLi4ucHJvY2Vzcy5lbnYgfSBhcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmcgfCB1bmRlZmluZWQ+O1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiICYmICFlbnYuT1BFTkFJX0FQSV9LRVkgJiYgIWVudi5PUEVOUk9VVEVSX0FQSV9LRVkpIHtcbiAgICBlbnYuT1BFTkFJX0FQSV9LRVkgPSBcInRlc3Qta2V5XCI7XG4gIH1cbiAgY29uc3QgcGFyc2VkID0gZW52U2NoZW1hLnBhcnNlKGVudik7XG4gIGNhY2hlZCA9IHtcbiAgICBvcGVuYWlBcGlLZXk6IHBhcnNlZC5PUEVOQUlfQVBJX0tFWSB8fCB1bmRlZmluZWQsXG4gICAgb3BlbnJvdXRlckFwaUtleTogcGFyc2VkLk9QRU5ST1VURVJfQVBJX0tFWSB8fCB1bmRlZmluZWQsXG4gICAgb3BlbnJvdXRlclNpdGU6IHBhcnNlZC5PUEVOUk9VVEVSX1NJVEUgfHwgdW5kZWZpbmVkLFxuICAgIGFsbG93ZWRNb2RlbHM6IHBhcnNlZC5BTExPV0VEX01PREVMU1xuICAgICAgPyBwYXJzZWQuQUxMT1dFRF9NT0RFTFMuc3BsaXQoXCIsXCIpXG4gICAgICAgICAgLm1hcCgoczogc3RyaW5nKSA9PiBzLnRyaW0oKSlcbiAgICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICA6IFtdLFxuICAgIHN1bW1hcml6ZXJNb2RlbDogcGFyc2VkLlNVTU1BUklaRVJfTU9ERUwgfHwgdW5kZWZpbmVkLFxuICAgIG1heFRva2Vuc1BlckNhbGw6IHBhcnNlZC5NQVhfVE9LRU5TX1BFUl9DQUxMLFxuICAgIG1heE1lc3NhZ2VzUGVyQ29udmVyc2F0aW9uOiBwYXJzZWQuTUFYX01FU1NBR0VTX1BFUl9DT05WTyxcbiAgICByYXRlTGltaXRFbmFibGVkOiBwYXJzZWQuUkFURV9MSU1JVF9FTkFCTEVELFxuICAgIHJhdGVMaW1pdFJwbTogcGFyc2VkLlJBVEVfTElNSVRfUlBNLFxuICAgIHJlcXVlc3RUaW1lb3V0TXM6IHBhcnNlZC5SRVFVRVNUX1RJTUVPVVRfTVMsXG4gICAgbWF4VXNkUGVyQ29udmVyc2F0aW9uOiBwYXJzZWQuTUFYX1VTRF9QRVJfQ09OVk8sXG4gICAgcmVkaXNVcmw6IGVudi5SRURJU19VUkwgfHwgdW5kZWZpbmVkLFxuICB9O1xuICByZXR1cm4gY2FjaGVkO1xufVxuXG4vLyBUZXN0LW9ubHkgdXRpbGl0eSB0byByZXNldCBjYWNoZWQgY29uZmlnIGJldHdlZW4gdGVzdCBjYXNlc1xuZXhwb3J0IGZ1bmN0aW9uIF9fY2xlYXJDb25maWdDYWNoZSgpOiB2b2lkIHtcbiAgY2FjaGVkID0gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbInoiLCJvcHRpb25hbE5vbkVtcHR5Iiwic2NoZW1hIiwicHJlcHJvY2VzcyIsInYiLCJ0cmltIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwib3B0aW9uYWwiLCJlbnZTY2hlbWEiLCJvYmplY3QiLCJPUEVOQUlfQVBJX0tFWSIsInN0cmluZyIsIm1pbiIsIk9QRU5ST1VURVJfQVBJX0tFWSIsIk9QRU5ST1VURVJfU0lURSIsIkFMTE9XRURfTU9ERUxTIiwiU1VNTUFSSVpFUl9NT0RFTCIsIk1BWF9UT0tFTlNfUEVSX0NBTEwiLCJjb2VyY2UiLCJudW1iZXIiLCJpbnQiLCJwb3NpdGl2ZSIsImRlZmF1bHQiLCJNQVhfTUVTU0FHRVNfUEVSX0NPTlZPIiwiUkFURV9MSU1JVF9FTkFCTEVEIiwidW5pb24iLCJib29sZWFuIiwidHJhbnNmb3JtIiwidG9Mb3dlckNhc2UiLCJSQVRFX0xJTUlUX1JQTSIsIlJFUVVFU1RfVElNRU9VVF9NUyIsIk1BWF9VU0RfUEVSX0NPTlZPIiwibm9ubmVnYXRpdmUiLCJyZWZpbmUiLCJCb29sZWFuIiwiY2FjaGVkIiwiZ2V0Q29uZmlnIiwiZW52IiwicHJvY2VzcyIsInBhcnNlZCIsInBhcnNlIiwib3BlbmFpQXBpS2V5Iiwib3BlbnJvdXRlckFwaUtleSIsIm9wZW5yb3V0ZXJTaXRlIiwiYWxsb3dlZE1vZGVscyIsInNwbGl0IiwibWFwIiwicyIsImZpbHRlciIsInN1bW1hcml6ZXJNb2RlbCIsIm1heFRva2Vuc1BlckNhbGwiLCJtYXhNZXNzYWdlc1BlckNvbnZlcnNhdGlvbiIsInJhdGVMaW1pdEVuYWJsZWQiLCJyYXRlTGltaXRScG0iLCJyZXF1ZXN0VGltZW91dE1zIiwibWF4VXNkUGVyQ29udmVyc2F0aW9uIiwicmVkaXNVcmwiLCJSRURJU19VUkwiLCJfX2NsZWFyQ29uZmlnQ2FjaGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs.ts":
/*!*************************!*\
  !*** ./src/lib/jobs.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canStartJobForOwner: () => (/* binding */ canStartJobForOwner),\n/* harmony export */   createJob: () => (/* binding */ createJob),\n/* harmony export */   getActiveCountForOwner: () => (/* binding */ getActiveCountForOwner),\n/* harmony export */   getJob: () => (/* binding */ getJob),\n/* harmony export */   subscribeJob: () => (/* binding */ subscribeJob),\n/* harmony export */   updateJob: () => (/* binding */ updateJob)\n/* harmony export */ });\nconst jobs = new Map();\nconst listeners = new Map();\nconst jobOwners = new Map();\nconst ownerActiveCounts = new Map();\nconst EVICT_TTL_MS = 10 * 60 * 1000; // 10 minutes\nfunction createJob(id, type, owner) {\n    const now = Date.now();\n    const job = {\n        id,\n        type,\n        status: \"pending\",\n        createdAt: now,\n        updatedAt: now\n    };\n    jobs.set(id, job);\n    if (owner) {\n        jobOwners.set(id, owner);\n        ownerActiveCounts.set(owner, (ownerActiveCounts.get(owner) ?? 0) + 1);\n    }\n    return job;\n}\nfunction getJob(id) {\n    return jobs.get(id);\n}\nfunction updateJob(id, patch) {\n    const cur = jobs.get(id);\n    if (!cur) return undefined;\n    const next = {\n        ...cur,\n        ...patch,\n        updatedAt: Date.now()\n    };\n    jobs.set(id, next);\n    const ls = listeners.get(id);\n    if (ls) for (const cb of ls)cb(next);\n    // When job reaches a terminal state, decrement owner's active count and schedule eviction\n    if (next.status === \"succeeded\" || next.status === \"failed\") {\n        const owner = jobOwners.get(id);\n        if (owner) {\n            const curCount = ownerActiveCounts.get(owner) ?? 0;\n            ownerActiveCounts.set(owner, Math.max(0, curCount - 1));\n            jobOwners.delete(id);\n        }\n        const ttl = process.env.NEXT_PUBLIC_E2E_MODE === \"1\" ? 250 : EVICT_TTL_MS;\n        setTimeout(()=>{\n            jobs.delete(id);\n            listeners.delete(id);\n        }, ttl);\n    }\n    return next;\n}\nfunction subscribeJob(id, cb) {\n    const set = listeners.get(id) ?? new Set();\n    set.add(cb);\n    listeners.set(id, set);\n    return ()=>{\n        const s = listeners.get(id);\n        if (!s) return;\n        s.delete(cb);\n        if (s.size === 0) listeners.delete(id);\n    };\n}\nfunction getActiveCountForOwner(owner) {\n    return ownerActiveCounts.get(owner) ?? 0;\n}\nfunction canStartJobForOwner(owner, cap) {\n    return (ownerActiveCounts.get(owner) ?? 0) < cap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBZUEsTUFBTUEsT0FBTyxJQUFJQztBQUNqQixNQUFNQyxZQUFZLElBQUlEO0FBQ3RCLE1BQU1FLFlBQVksSUFBSUY7QUFDdEIsTUFBTUcsb0JBQW9CLElBQUlIO0FBRTlCLE1BQU1JLGVBQWUsS0FBSyxLQUFLLE1BQU0sYUFBYTtBQUUzQyxTQUFTQyxVQUFVQyxFQUFVLEVBQUVDLElBQWEsRUFBRUMsS0FBYztJQUNqRSxNQUFNQyxNQUFNQyxLQUFLRCxHQUFHO0lBQ3BCLE1BQU1FLE1BQVc7UUFBRUw7UUFBSUM7UUFBTUssUUFBUTtRQUFXQyxXQUFXSjtRQUFLSyxXQUFXTDtJQUFJO0lBQy9FVixLQUFLZ0IsR0FBRyxDQUFDVCxJQUFJSztJQUNiLElBQUlILE9BQU87UUFDVE4sVUFBVWEsR0FBRyxDQUFDVCxJQUFJRTtRQUNsQkwsa0JBQWtCWSxHQUFHLENBQUNQLE9BQU8sQ0FBQ0wsa0JBQWtCYSxHQUFHLENBQUNSLFVBQVUsS0FBSztJQUNyRTtJQUNBLE9BQU9HO0FBQ1Q7QUFFTyxTQUFTTSxPQUFPWCxFQUFVO0lBQy9CLE9BQU9QLEtBQUtpQixHQUFHLENBQUNWO0FBQ2xCO0FBRU8sU0FBU1ksVUFDZFosRUFBVSxFQUNWYSxLQUE2QztJQUU3QyxNQUFNQyxNQUFNckIsS0FBS2lCLEdBQUcsQ0FBQ1Y7SUFDckIsSUFBSSxDQUFDYyxLQUFLLE9BQU9DO0lBQ2pCLE1BQU1DLE9BQVk7UUFBRSxHQUFHRixHQUFHO1FBQUUsR0FBR0QsS0FBSztRQUFFTCxXQUFXSixLQUFLRCxHQUFHO0lBQUc7SUFDNURWLEtBQUtnQixHQUFHLENBQUNULElBQUlnQjtJQUNiLE1BQU1DLEtBQUt0QixVQUFVZSxHQUFHLENBQUNWO0lBQ3pCLElBQUlpQixJQUFJLEtBQUssTUFBTUMsTUFBTUQsR0FBSUMsR0FBR0Y7SUFFaEMsMEZBQTBGO0lBQzFGLElBQUlBLEtBQUtWLE1BQU0sS0FBSyxlQUFlVSxLQUFLVixNQUFNLEtBQUssVUFBVTtRQUMzRCxNQUFNSixRQUFRTixVQUFVYyxHQUFHLENBQUNWO1FBQzVCLElBQUlFLE9BQU87WUFDVCxNQUFNaUIsV0FBV3RCLGtCQUFrQmEsR0FBRyxDQUFDUixVQUFVO1lBQ2pETCxrQkFBa0JZLEdBQUcsQ0FBQ1AsT0FBT2tCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHRixXQUFXO1lBQ3BEdkIsVUFBVTBCLE1BQU0sQ0FBQ3RCO1FBQ25CO1FBQ0EsTUFBTXVCLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ0Msb0JBQW9CLEtBQUssTUFBTSxNQUFNNUI7UUFDN0Q2QixXQUFXO1lBQ1RsQyxLQUFLNkIsTUFBTSxDQUFDdEI7WUFDWkwsVUFBVTJCLE1BQU0sQ0FBQ3RCO1FBQ25CLEdBQUd1QjtJQUNMO0lBQ0EsT0FBT1A7QUFDVDtBQUVPLFNBQVNZLGFBQWE1QixFQUFVLEVBQUVrQixFQUFZO0lBQ25ELE1BQU1ULE1BQU1kLFVBQVVlLEdBQUcsQ0FBQ1YsT0FBTyxJQUFJNkI7SUFDckNwQixJQUFJcUIsR0FBRyxDQUFDWjtJQUNSdkIsVUFBVWMsR0FBRyxDQUFDVCxJQUFJUztJQUNsQixPQUFPO1FBQ0wsTUFBTXNCLElBQUlwQyxVQUFVZSxHQUFHLENBQUNWO1FBQ3hCLElBQUksQ0FBQytCLEdBQUc7UUFDUkEsRUFBRVQsTUFBTSxDQUFDSjtRQUNULElBQUlhLEVBQUVDLElBQUksS0FBSyxHQUFHckMsVUFBVTJCLE1BQU0sQ0FBQ3RCO0lBQ3JDO0FBQ0Y7QUFFTyxTQUFTaUMsdUJBQXVCL0IsS0FBYTtJQUNsRCxPQUFPTCxrQkFBa0JhLEdBQUcsQ0FBQ1IsVUFBVTtBQUN6QztBQUVPLFNBQVNnQyxvQkFBb0JoQyxLQUFhLEVBQUVpQyxHQUFXO0lBQzVELE9BQU8sQ0FBQ3RDLGtCQUFrQmEsR0FBRyxDQUFDUixVQUFVLEtBQUtpQztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FnZW50LXdhcnMtd2ViLy4vc3JjL2xpYi9qb2JzLnRzPzI3ZDQiXSwic291cmNlc0NvbnRlbnQiOlsidHlwZSBKb2JUeXBlID0gXCJiYXR0bGVcIiB8IFwic2NhbGVcIjtcbnR5cGUgSm9iU3RhdHVzID0gXCJwZW5kaW5nXCIgfCBcInJ1bm5pbmdcIiB8IFwic3VjY2VlZGVkXCIgfCBcImZhaWxlZFwiO1xuXG5leHBvcnQgdHlwZSBKb2IgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6IEpvYlR5cGU7XG4gIHN0YXR1czogSm9iU3RhdHVzO1xuICBkYXRhPzogdW5rbm93bjtcbiAgZXJyb3I/OiBzdHJpbmc7XG4gIGNyZWF0ZWRBdDogbnVtYmVyO1xuICB1cGRhdGVkQXQ6IG51bWJlcjtcbn07XG5cbnR5cGUgTGlzdGVuZXIgPSAoam9iOiBKb2IpID0+IHZvaWQ7XG5cbmNvbnN0IGpvYnMgPSBuZXcgTWFwPHN0cmluZywgSm9iPigpO1xuY29uc3QgbGlzdGVuZXJzID0gbmV3IE1hcDxzdHJpbmcsIFNldDxMaXN0ZW5lcj4+KCk7XG5jb25zdCBqb2JPd25lcnMgPSBuZXcgTWFwPHN0cmluZywgc3RyaW5nPigpO1xuY29uc3Qgb3duZXJBY3RpdmVDb3VudHMgPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPigpO1xuXG5jb25zdCBFVklDVF9UVExfTVMgPSAxMCAqIDYwICogMTAwMDsgLy8gMTAgbWludXRlc1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSm9iKGlkOiBzdHJpbmcsIHR5cGU6IEpvYlR5cGUsIG93bmVyPzogc3RyaW5nKTogSm9iIHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3Qgam9iOiBKb2IgPSB7IGlkLCB0eXBlLCBzdGF0dXM6IFwicGVuZGluZ1wiLCBjcmVhdGVkQXQ6IG5vdywgdXBkYXRlZEF0OiBub3cgfTtcbiAgam9icy5zZXQoaWQsIGpvYik7XG4gIGlmIChvd25lcikge1xuICAgIGpvYk93bmVycy5zZXQoaWQsIG93bmVyKTtcbiAgICBvd25lckFjdGl2ZUNvdW50cy5zZXQob3duZXIsIChvd25lckFjdGl2ZUNvdW50cy5nZXQob3duZXIpID8/IDApICsgMSk7XG4gIH1cbiAgcmV0dXJuIGpvYjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEpvYihpZDogc3RyaW5nKTogSm9iIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIGpvYnMuZ2V0KGlkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUpvYihcbiAgaWQ6IHN0cmluZyxcbiAgcGF0Y2g6IFBhcnRpYWw8T21pdDxKb2IsIFwiaWRcIiB8IFwiY3JlYXRlZEF0XCI+Pixcbik6IEpvYiB8IHVuZGVmaW5lZCB7XG4gIGNvbnN0IGN1ciA9IGpvYnMuZ2V0KGlkKTtcbiAgaWYgKCFjdXIpIHJldHVybiB1bmRlZmluZWQ7XG4gIGNvbnN0IG5leHQ6IEpvYiA9IHsgLi4uY3VyLCAuLi5wYXRjaCwgdXBkYXRlZEF0OiBEYXRlLm5vdygpIH0gYXMgSm9iO1xuICBqb2JzLnNldChpZCwgbmV4dCk7XG4gIGNvbnN0IGxzID0gbGlzdGVuZXJzLmdldChpZCk7XG4gIGlmIChscykgZm9yIChjb25zdCBjYiBvZiBscykgY2IobmV4dCk7XG5cbiAgLy8gV2hlbiBqb2IgcmVhY2hlcyBhIHRlcm1pbmFsIHN0YXRlLCBkZWNyZW1lbnQgb3duZXIncyBhY3RpdmUgY291bnQgYW5kIHNjaGVkdWxlIGV2aWN0aW9uXG4gIGlmIChuZXh0LnN0YXR1cyA9PT0gXCJzdWNjZWVkZWRcIiB8fCBuZXh0LnN0YXR1cyA9PT0gXCJmYWlsZWRcIikge1xuICAgIGNvbnN0IG93bmVyID0gam9iT3duZXJzLmdldChpZCk7XG4gICAgaWYgKG93bmVyKSB7XG4gICAgICBjb25zdCBjdXJDb3VudCA9IG93bmVyQWN0aXZlQ291bnRzLmdldChvd25lcikgPz8gMDtcbiAgICAgIG93bmVyQWN0aXZlQ291bnRzLnNldChvd25lciwgTWF0aC5tYXgoMCwgY3VyQ291bnQgLSAxKSk7XG4gICAgICBqb2JPd25lcnMuZGVsZXRlKGlkKTtcbiAgICB9XG4gICAgY29uc3QgdHRsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRTJFX01PREUgPT09IFwiMVwiID8gMjUwIDogRVZJQ1RfVFRMX01TO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgam9icy5kZWxldGUoaWQpO1xuICAgICAgbGlzdGVuZXJzLmRlbGV0ZShpZCk7XG4gICAgfSwgdHRsKTtcbiAgfVxuICByZXR1cm4gbmV4dDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnNjcmliZUpvYihpZDogc3RyaW5nLCBjYjogTGlzdGVuZXIpOiAoKSA9PiB2b2lkIHtcbiAgY29uc3Qgc2V0ID0gbGlzdGVuZXJzLmdldChpZCkgPz8gbmV3IFNldDxMaXN0ZW5lcj4oKTtcbiAgc2V0LmFkZChjYik7XG4gIGxpc3RlbmVycy5zZXQoaWQsIHNldCk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29uc3QgcyA9IGxpc3RlbmVycy5nZXQoaWQpO1xuICAgIGlmICghcykgcmV0dXJuO1xuICAgIHMuZGVsZXRlKGNiKTtcbiAgICBpZiAocy5zaXplID09PSAwKSBsaXN0ZW5lcnMuZGVsZXRlKGlkKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFjdGl2ZUNvdW50Rm9yT3duZXIob3duZXI6IHN0cmluZyk6IG51bWJlciB7XG4gIHJldHVybiBvd25lckFjdGl2ZUNvdW50cy5nZXQob3duZXIpID8/IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW5TdGFydEpvYkZvck93bmVyKG93bmVyOiBzdHJpbmcsIGNhcDogbnVtYmVyKTogYm9vbGVhbiB7XG4gIHJldHVybiAob3duZXJBY3RpdmVDb3VudHMuZ2V0KG93bmVyKSA/PyAwKSA8IGNhcDtcbn1cbiJdLCJuYW1lcyI6WyJqb2JzIiwiTWFwIiwibGlzdGVuZXJzIiwiam9iT3duZXJzIiwib3duZXJBY3RpdmVDb3VudHMiLCJFVklDVF9UVExfTVMiLCJjcmVhdGVKb2IiLCJpZCIsInR5cGUiLCJvd25lciIsIm5vdyIsIkRhdGUiLCJqb2IiLCJzdGF0dXMiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJzZXQiLCJnZXQiLCJnZXRKb2IiLCJ1cGRhdGVKb2IiLCJwYXRjaCIsImN1ciIsInVuZGVmaW5lZCIsIm5leHQiLCJscyIsImNiIiwiY3VyQ291bnQiLCJNYXRoIiwibWF4IiwiZGVsZXRlIiwidHRsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0UyRV9NT0RFIiwic2V0VGltZW91dCIsInN1YnNjcmliZUpvYiIsIlNldCIsImFkZCIsInMiLCJzaXplIiwiZ2V0QWN0aXZlQ291bnRGb3JPd25lciIsImNhblN0YXJ0Sm9iRm9yT3duZXIiLCJjYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/llm/guards.ts":
/*!*******************************!*\
  !*** ./src/lib/llm/guards.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GuardrailsError: () => (/* binding */ GuardrailsError),\n/* harmony export */   computeBackoffDelayMs: () => (/* binding */ computeBackoffDelayMs),\n/* harmony export */   enforceCaps: () => (/* binding */ enforceCaps),\n/* harmony export */   getAllowedModels: () => (/* binding */ getAllowedModels),\n/* harmony export */   getMaxMessagesPerConversation: () => (/* binding */ getMaxMessagesPerConversation),\n/* harmony export */   getMaxTokensPerCall: () => (/* binding */ getMaxTokensPerCall),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n/* harmony import */ var _lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/config */ \"(rsc)/./src/lib/config.ts\");\n\nfunction getAllowedModels() {\n    const cfg = (0,_lib_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n    return new Set(cfg.allowedModels);\n}\nfunction getMaxTokensPerCall() {\n    return (0,_lib_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)().maxTokensPerCall;\n}\nfunction getMaxMessagesPerConversation() {\n    return (0,_lib_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)().maxMessagesPerConversation;\n}\nclass GuardrailsError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"GuardrailsError\";\n    }\n}\nfunction enforceCaps(args) {\n    const maxTokens = getMaxTokensPerCall();\n    if ((args.requestedMaxTokens ?? maxTokens) > maxTokens) {\n        throw new GuardrailsError(`maxTokens exceeds cap (${args.requestedMaxTokens} > ${maxTokens})`);\n    }\n    const maxMsgs = getMaxMessagesPerConversation();\n    if (args.messageCount > maxMsgs) {\n        throw new GuardrailsError(`message count exceeds cap (${args.messageCount} > ${maxMsgs})`);\n    }\n    const allowed = getAllowedModels();\n    if (allowed.size > 0 && !allowed.has(args.model)) {\n        throw new GuardrailsError(`model not allowed: ${args.model}`);\n    }\n}\nconst limiterStore = new Map();\nfunction rateLimit(key) {\n    const cfg = (0,_lib_config__WEBPACK_IMPORTED_MODULE_0__.getConfig)();\n    if (!cfg.rateLimitEnabled) return;\n    const maxPerWindow = cfg.rateLimitRpm;\n    const now = Date.now();\n    const windowMs = 60000;\n    const w = limiterStore.get(key);\n    if (!w || now - w.windowStartMs >= windowMs) {\n        limiterStore.set(key, {\n            count: 1,\n            windowStartMs: now\n        });\n        return;\n    }\n    if (w.count >= maxPerWindow) {\n        throw new GuardrailsError(\"rate limit exceeded\");\n    }\n    w.count += 1;\n}\nasync function sleep(ms) {\n    await new Promise((res)=>setTimeout(res, ms));\n}\nfunction computeBackoffDelayMs(attempt) {\n    // attempt: 0,1,2 -> 250ms, 750ms, 1250ms with jitter\n    const base = 250 + attempt * 500;\n    const jitter = Math.floor(Math.random() * 100);\n    return base + jitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2xsbS9ndWFyZHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXlDO0FBRWxDLFNBQVNDO0lBQ2QsTUFBTUMsTUFBTUYsc0RBQVNBO0lBQ3JCLE9BQU8sSUFBSUcsSUFBSUQsSUFBSUUsYUFBYTtBQUNsQztBQUVPLFNBQVNDO0lBQ2QsT0FBT0wsc0RBQVNBLEdBQUdNLGdCQUFnQjtBQUNyQztBQUVPLFNBQVNDO0lBQ2QsT0FBT1Asc0RBQVNBLEdBQUdRLDBCQUEwQjtBQUMvQztBQUVPLE1BQU1DLHdCQUF3QkM7SUFDbkNDLFlBQVlDLE9BQWUsQ0FBRTtRQUMzQixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDZDtBQUNGO0FBRU8sU0FBU0MsWUFBWUMsSUFJM0I7SUFDQyxNQUFNQyxZQUFZWDtJQUNsQixJQUFJLENBQUNVLEtBQUtFLGtCQUFrQixJQUFJRCxTQUFRLElBQUtBLFdBQVc7UUFDdEQsTUFBTSxJQUFJUCxnQkFBZ0IsQ0FBQyx1QkFBdUIsRUFBRU0sS0FBS0Usa0JBQWtCLENBQUMsR0FBRyxFQUFFRCxVQUFVLENBQUMsQ0FBQztJQUMvRjtJQUNBLE1BQU1FLFVBQVVYO0lBQ2hCLElBQUlRLEtBQUtJLFlBQVksR0FBR0QsU0FBUztRQUMvQixNQUFNLElBQUlULGdCQUFnQixDQUFDLDJCQUEyQixFQUFFTSxLQUFLSSxZQUFZLENBQUMsR0FBRyxFQUFFRCxRQUFRLENBQUMsQ0FBQztJQUMzRjtJQUNBLE1BQU1FLFVBQVVuQjtJQUNoQixJQUFJbUIsUUFBUUMsSUFBSSxHQUFHLEtBQUssQ0FBQ0QsUUFBUUUsR0FBRyxDQUFDUCxLQUFLUSxLQUFLLEdBQUc7UUFDaEQsTUFBTSxJQUFJZCxnQkFBZ0IsQ0FBQyxtQkFBbUIsRUFBRU0sS0FBS1EsS0FBSyxDQUFDLENBQUM7SUFDOUQ7QUFDRjtBQUdBLE1BQU1DLGVBQW9DLElBQUlDO0FBRXZDLFNBQVNDLFVBQVVDLEdBQVc7SUFDbkMsTUFBTXpCLE1BQU1GLHNEQUFTQTtJQUNyQixJQUFJLENBQUNFLElBQUkwQixnQkFBZ0IsRUFBRTtJQUMzQixNQUFNQyxlQUFlM0IsSUFBSTRCLFlBQVk7SUFDckMsTUFBTUMsTUFBTUMsS0FBS0QsR0FBRztJQUNwQixNQUFNRSxXQUFXO0lBQ2pCLE1BQU1DLElBQUlWLGFBQWFXLEdBQUcsQ0FBQ1I7SUFDM0IsSUFBSSxDQUFDTyxLQUFLSCxNQUFNRyxFQUFFRSxhQUFhLElBQUlILFVBQVU7UUFDM0NULGFBQWFhLEdBQUcsQ0FBQ1YsS0FBSztZQUFFVyxPQUFPO1lBQUdGLGVBQWVMO1FBQUk7UUFDckQ7SUFDRjtJQUNBLElBQUlHLEVBQUVJLEtBQUssSUFBSVQsY0FBYztRQUMzQixNQUFNLElBQUlwQixnQkFBZ0I7SUFDNUI7SUFDQXlCLEVBQUVJLEtBQUssSUFBSTtBQUNiO0FBRU8sZUFBZUMsTUFBTUMsRUFBVTtJQUNwQyxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsTUFBUUMsV0FBV0QsS0FBS0Y7QUFDN0M7QUFFTyxTQUFTSSxzQkFBc0JDLE9BQWU7SUFDbkQscURBQXFEO0lBQ3JELE1BQU1DLE9BQU8sTUFBTUQsVUFBVTtJQUM3QixNQUFNRSxTQUFTQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSztJQUMxQyxPQUFPSixPQUFPQztBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FnZW50LXdhcnMtd2ViLy4vc3JjL2xpYi9sbG0vZ3VhcmRzLnRzP2I5NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q29uZmlnIH0gZnJvbSBcIkAvbGliL2NvbmZpZ1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsb3dlZE1vZGVscygpOiBTZXQ8c3RyaW5nPiB7XG4gIGNvbnN0IGNmZyA9IGdldENvbmZpZygpO1xuICByZXR1cm4gbmV3IFNldChjZmcuYWxsb3dlZE1vZGVscyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXhUb2tlbnNQZXJDYWxsKCk6IG51bWJlciB7XG4gIHJldHVybiBnZXRDb25maWcoKS5tYXhUb2tlbnNQZXJDYWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TWF4TWVzc2FnZXNQZXJDb252ZXJzYXRpb24oKTogbnVtYmVyIHtcbiAgcmV0dXJuIGdldENvbmZpZygpLm1heE1lc3NhZ2VzUGVyQ29udmVyc2F0aW9uO1xufVxuXG5leHBvcnQgY2xhc3MgR3VhcmRyYWlsc0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBcIkd1YXJkcmFpbHNFcnJvclwiO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmZvcmNlQ2FwcyhhcmdzOiB7XG4gIHJlcXVlc3RlZE1heFRva2VuczogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBtZXNzYWdlQ291bnQ6IG51bWJlcjtcbiAgbW9kZWw6IHN0cmluZztcbn0pOiB2b2lkIHtcbiAgY29uc3QgbWF4VG9rZW5zID0gZ2V0TWF4VG9rZW5zUGVyQ2FsbCgpO1xuICBpZiAoKGFyZ3MucmVxdWVzdGVkTWF4VG9rZW5zID8/IG1heFRva2VucykgPiBtYXhUb2tlbnMpIHtcbiAgICB0aHJvdyBuZXcgR3VhcmRyYWlsc0Vycm9yKGBtYXhUb2tlbnMgZXhjZWVkcyBjYXAgKCR7YXJncy5yZXF1ZXN0ZWRNYXhUb2tlbnN9ID4gJHttYXhUb2tlbnN9KWApO1xuICB9XG4gIGNvbnN0IG1heE1zZ3MgPSBnZXRNYXhNZXNzYWdlc1BlckNvbnZlcnNhdGlvbigpO1xuICBpZiAoYXJncy5tZXNzYWdlQ291bnQgPiBtYXhNc2dzKSB7XG4gICAgdGhyb3cgbmV3IEd1YXJkcmFpbHNFcnJvcihgbWVzc2FnZSBjb3VudCBleGNlZWRzIGNhcCAoJHthcmdzLm1lc3NhZ2VDb3VudH0gPiAke21heE1zZ3N9KWApO1xuICB9XG4gIGNvbnN0IGFsbG93ZWQgPSBnZXRBbGxvd2VkTW9kZWxzKCk7XG4gIGlmIChhbGxvd2VkLnNpemUgPiAwICYmICFhbGxvd2VkLmhhcyhhcmdzLm1vZGVsKSkge1xuICAgIHRocm93IG5ldyBHdWFyZHJhaWxzRXJyb3IoYG1vZGVsIG5vdCBhbGxvd2VkOiAke2FyZ3MubW9kZWx9YCk7XG4gIH1cbn1cblxudHlwZSBXaW5kb3cgPSB7IGNvdW50OiBudW1iZXI7IHdpbmRvd1N0YXJ0TXM6IG51bWJlciB9O1xuY29uc3QgbGltaXRlclN0b3JlOiBNYXA8c3RyaW5nLCBXaW5kb3c+ID0gbmV3IE1hcCgpO1xuXG5leHBvcnQgZnVuY3Rpb24gcmF0ZUxpbWl0KGtleTogc3RyaW5nKTogdm9pZCB7XG4gIGNvbnN0IGNmZyA9IGdldENvbmZpZygpO1xuICBpZiAoIWNmZy5yYXRlTGltaXRFbmFibGVkKSByZXR1cm47XG4gIGNvbnN0IG1heFBlcldpbmRvdyA9IGNmZy5yYXRlTGltaXRScG07XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gIGNvbnN0IHdpbmRvd01zID0gNjBfMDAwO1xuICBjb25zdCB3ID0gbGltaXRlclN0b3JlLmdldChrZXkpO1xuICBpZiAoIXcgfHwgbm93IC0gdy53aW5kb3dTdGFydE1zID49IHdpbmRvd01zKSB7XG4gICAgbGltaXRlclN0b3JlLnNldChrZXksIHsgY291bnQ6IDEsIHdpbmRvd1N0YXJ0TXM6IG5vdyB9KTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHcuY291bnQgPj0gbWF4UGVyV2luZG93KSB7XG4gICAgdGhyb3cgbmV3IEd1YXJkcmFpbHNFcnJvcihcInJhdGUgbGltaXQgZXhjZWVkZWRcIik7XG4gIH1cbiAgdy5jb3VudCArPSAxO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2xlZXAobXM6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzKSA9PiBzZXRUaW1lb3V0KHJlcywgbXMpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVCYWNrb2ZmRGVsYXlNcyhhdHRlbXB0OiBudW1iZXIpOiBudW1iZXIge1xuICAvLyBhdHRlbXB0OiAwLDEsMiAtPiAyNTBtcywgNzUwbXMsIDEyNTBtcyB3aXRoIGppdHRlclxuICBjb25zdCBiYXNlID0gMjUwICsgYXR0ZW1wdCAqIDUwMDtcbiAgY29uc3Qgaml0dGVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwKTtcbiAgcmV0dXJuIGJhc2UgKyBqaXR0ZXI7XG59XG4iXSwibmFtZXMiOlsiZ2V0Q29uZmlnIiwiZ2V0QWxsb3dlZE1vZGVscyIsImNmZyIsIlNldCIsImFsbG93ZWRNb2RlbHMiLCJnZXRNYXhUb2tlbnNQZXJDYWxsIiwibWF4VG9rZW5zUGVyQ2FsbCIsImdldE1heE1lc3NhZ2VzUGVyQ29udmVyc2F0aW9uIiwibWF4TWVzc2FnZXNQZXJDb252ZXJzYXRpb24iLCJHdWFyZHJhaWxzRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm5hbWUiLCJlbmZvcmNlQ2FwcyIsImFyZ3MiLCJtYXhUb2tlbnMiLCJyZXF1ZXN0ZWRNYXhUb2tlbnMiLCJtYXhNc2dzIiwibWVzc2FnZUNvdW50IiwiYWxsb3dlZCIsInNpemUiLCJoYXMiLCJtb2RlbCIsImxpbWl0ZXJTdG9yZSIsIk1hcCIsInJhdGVMaW1pdCIsImtleSIsInJhdGVMaW1pdEVuYWJsZWQiLCJtYXhQZXJXaW5kb3ciLCJyYXRlTGltaXRScG0iLCJub3ciLCJEYXRlIiwid2luZG93TXMiLCJ3IiwiZ2V0Iiwid2luZG93U3RhcnRNcyIsInNldCIsImNvdW50Iiwic2xlZXAiLCJtcyIsIlByb21pc2UiLCJyZXMiLCJzZXRUaW1lb3V0IiwiY29tcHV0ZUJhY2tvZmZEZWxheU1zIiwiYXR0ZW1wdCIsImJhc2UiLCJqaXR0ZXIiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/llm/guards.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/llm/provider.ts":
/*!*********************************!*\
  !*** ./src/lib/llm/provider.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chat: () => (/* binding */ chat)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var _lib_llm_guards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/llm/guards */ \"(rsc)/./src/lib/llm/guards.ts\");\n/* harmony import */ var _lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/config */ \"(rsc)/./src/lib/config.ts\");\n\n\n\nasync function chat(messages, opts) {\n    if (process.env.E2E_MODE === \"1\") {\n        // Deterministic stub for E2E: echo the last user content\n        const lastUser = [\n            ...messages\n        ].reverse().find((m)=>m.role === \"user\");\n        const text = lastUser?.content ? `E2E: ${lastUser.content}` : \"E2E: ok\";\n        return {\n            text,\n            usage: {\n                inputTokens: 10,\n                outputTokens: 20\n            },\n            raw: {}\n        };\n    }\n    // Guardrails\n    (0,_lib_llm_guards__WEBPACK_IMPORTED_MODULE_0__.enforceCaps)({\n        requestedMaxTokens: opts.maxTokens,\n        messageCount: messages.length,\n        model: opts.model\n    });\n    (0,_lib_llm_guards__WEBPACK_IMPORTED_MODULE_0__.rateLimit)(`${opts.provider}:${opts.model}`);\n    const cfg = (0,_lib_config__WEBPACK_IMPORTED_MODULE_1__.getConfig)();\n    const isOpenRouter = opts.provider === \"openrouter\";\n    const client = new openai__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n        apiKey: isOpenRouter ? cfg.openrouterApiKey : cfg.openaiApiKey,\n        baseURL: isOpenRouter ? \"https://openrouter.ai/api/v1\" : undefined\n    });\n    const headers = isOpenRouter ? {\n        \"HTTP-Referer\": cfg.openrouterSite || \"\",\n        \"X-Title\": \"Agent Wars\"\n    } : undefined;\n    if (opts.stream) {\n        // Minimal streaming assembly (iterator mode)\n        const stream = await client.chat.completions.create({\n            model: opts.model,\n            messages,\n            max_tokens: opts.maxTokens ?? 512,\n            temperature: opts.temperature ?? 0.2,\n            stop: opts.stop,\n            stream: true,\n            extra_headers: headers\n        });\n        let text = \"\";\n        // openai v4 streams expose an async iterator via .[Symbol.asyncIterator]\n        // Cast to any to iterate chunks\n        for await (const chunk of stream){\n            const delta = chunk?.choices?.[0]?.delta?.content;\n            if (delta) text += delta;\n        }\n        return {\n            text,\n            raw: stream\n        };\n    }\n    let lastErr;\n    for(let attempt = 0; attempt < 3; attempt++){\n        try {\n            const resp = await client.chat.completions.create({\n                model: opts.model,\n                messages,\n                max_tokens: opts.maxTokens ?? 512,\n                temperature: opts.temperature ?? 0.2,\n                stop: opts.stop,\n                extra_headers: headers\n            });\n            const text = resp.choices?.[0]?.message?.content ?? \"\";\n            const usage = resp.usage ? {\n                inputTokens: resp.usage.prompt_tokens ?? 0,\n                outputTokens: resp.usage.completion_tokens ?? 0\n            } : undefined;\n            return {\n                text,\n                usage,\n                raw: resp\n            };\n        } catch (err) {\n            lastErr = err;\n            const status = err?.status ?? err?.response?.status;\n            if (attempt < 2 && (status === 429 || status >= 500 && status <= 599)) {\n                await (0,_lib_llm_guards__WEBPACK_IMPORTED_MODULE_0__.sleep)((0,_lib_llm_guards__WEBPACK_IMPORTED_MODULE_0__.computeBackoffDelayMs)(attempt));\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastErr;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/llm/provider.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/pricing.ts":
/*!****************************!*\
  !*** ./src/lib/pricing.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   estimateCostUsdFromUsage: () => (/* binding */ estimateCostUsdFromUsage),\n/* harmony export */   getPricing: () => (/* binding */ getPricing)\n/* harmony export */ });\nconst cache = {};\nconst TTL_MS = 60 * 60 * 1000; // 1 hour\n// Minimal static defaults as fallback (USD per 1K tokens)\nconst DEFAULTS = {\n    openai: {\n        inputPer1k: 0.002,\n        outputPer1k: 0.006\n    },\n    openrouter: {\n        inputPer1k: 0.0015,\n        outputPer1k: 0.005\n    }\n};\nfunction cacheKey(provider, model) {\n    return `${provider}:${model}`;\n}\nasync function getPricing(provider, model) {\n    const key = cacheKey(provider, model);\n    const now = Date.now();\n    const hit = cache[key];\n    if (hit && now - hit.at < TTL_MS) return hit.price;\n    // TODO: Replace with real provider pricing lookup endpoints if available\n    // For now, use provider defaults with simple heuristics per family\n    const base = DEFAULTS[provider];\n    const family = model.toLowerCase();\n    let price = base;\n    if (family.includes(\"gpt-4\")) {\n        price = {\n            inputPer1k: base.inputPer1k * 3,\n            outputPer1k: base.outputPer1k * 3\n        };\n    } else if (family.includes(\"mini\") || family.includes(\"small\")) {\n        price = {\n            inputPer1k: base.inputPer1k * 0.6,\n            outputPer1k: base.outputPer1k * 0.6\n        };\n    }\n    cache[key] = {\n        price,\n        at: now\n    };\n    return price;\n}\nfunction estimateCostUsdFromUsage(provider, model, usage) {\n    const inT = usage?.inputTokens ?? 0;\n    const outT = usage?.outputTokens ?? 0;\n    const key = cacheKey(provider, model);\n    const price = cache[key]?.price ?? DEFAULTS[provider];\n    return {\n        usdIn: inT / 1000 * price.inputPer1k,\n        usdOut: outT / 1000 * price.outputPer1k\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaWNpbmcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFJQSxNQUFNQSxRQUFzRCxDQUFDO0FBQzdELE1BQU1DLFNBQVMsS0FBSyxLQUFLLE1BQU0sU0FBUztBQUV4QywwREFBMEQ7QUFDMUQsTUFBTUMsV0FBb0M7SUFDeENDLFFBQVE7UUFBRUMsWUFBWTtRQUFPQyxhQUFhO0lBQU07SUFDaERDLFlBQVk7UUFBRUYsWUFBWTtRQUFRQyxhQUFhO0lBQU07QUFDdkQ7QUFFQSxTQUFTRSxTQUFTQyxRQUFrQixFQUFFQyxLQUFhO0lBQ2pELE9BQU8sQ0FBQyxFQUFFRCxTQUFTLENBQUMsRUFBRUMsTUFBTSxDQUFDO0FBQy9CO0FBRU8sZUFBZUMsV0FBV0YsUUFBa0IsRUFBRUMsS0FBYTtJQUNoRSxNQUFNRSxNQUFNSixTQUFTQyxVQUFVQztJQUMvQixNQUFNRyxNQUFNQyxLQUFLRCxHQUFHO0lBQ3BCLE1BQU1FLE1BQU1kLEtBQUssQ0FBQ1csSUFBSTtJQUN0QixJQUFJRyxPQUFPRixNQUFNRSxJQUFJQyxFQUFFLEdBQUdkLFFBQVEsT0FBT2EsSUFBSUUsS0FBSztJQUVsRCx5RUFBeUU7SUFDekUsbUVBQW1FO0lBQ25FLE1BQU1DLE9BQU9mLFFBQVEsQ0FBQ00sU0FBUztJQUMvQixNQUFNVSxTQUFTVCxNQUFNVSxXQUFXO0lBQ2hDLElBQUlILFFBQVFDO0lBQ1osSUFBSUMsT0FBT0UsUUFBUSxDQUFDLFVBQVU7UUFDNUJKLFFBQVE7WUFBRVosWUFBWWEsS0FBS2IsVUFBVSxHQUFHO1lBQUdDLGFBQWFZLEtBQUtaLFdBQVcsR0FBRztRQUFFO0lBQy9FLE9BQU8sSUFBSWEsT0FBT0UsUUFBUSxDQUFDLFdBQVdGLE9BQU9FLFFBQVEsQ0FBQyxVQUFVO1FBQzlESixRQUFRO1lBQUVaLFlBQVlhLEtBQUtiLFVBQVUsR0FBRztZQUFLQyxhQUFhWSxLQUFLWixXQUFXLEdBQUc7UUFBSTtJQUNuRjtJQUNBTCxLQUFLLENBQUNXLElBQUksR0FBRztRQUFFSztRQUFPRCxJQUFJSDtJQUFJO0lBQzlCLE9BQU9JO0FBQ1Q7QUFFTyxTQUFTSyx5QkFDZGIsUUFBa0IsRUFDbEJDLEtBQWEsRUFDYmEsS0FBdUQ7SUFFdkQsTUFBTUMsTUFBTUQsT0FBT0UsZUFBZTtJQUNsQyxNQUFNQyxPQUFPSCxPQUFPSSxnQkFBZ0I7SUFDcEMsTUFBTWYsTUFBTUosU0FBU0MsVUFBVUM7SUFDL0IsTUFBTU8sUUFBUWhCLEtBQUssQ0FBQ1csSUFBSSxFQUFFSyxTQUFTZCxRQUFRLENBQUNNLFNBQVM7SUFDckQsT0FBTztRQUFFbUIsT0FBTyxNQUFPLE9BQVFYLE1BQU1aLFVBQVU7UUFBRXdCLFFBQVEsT0FBUSxPQUFRWixNQUFNWCxXQUFXO0lBQUM7QUFDN0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZ2VudC13YXJzLXdlYi8uL3NyYy9saWIvcHJpY2luZy50cz9lZTM2Il0sInNvdXJjZXNDb250ZW50IjpbInR5cGUgUHJvdmlkZXIgPSBcIm9wZW5haVwiIHwgXCJvcGVucm91dGVyXCI7XG5cbnR5cGUgUHJpY2UgPSB7IGlucHV0UGVyMWs6IG51bWJlcjsgb3V0cHV0UGVyMWs6IG51bWJlciB9O1xuXG5jb25zdCBjYWNoZTogUmVjb3JkPHN0cmluZywgeyBwcmljZTogUHJpY2U7IGF0OiBudW1iZXIgfT4gPSB7fTtcbmNvbnN0IFRUTF9NUyA9IDYwICogNjAgKiAxMDAwOyAvLyAxIGhvdXJcblxuLy8gTWluaW1hbCBzdGF0aWMgZGVmYXVsdHMgYXMgZmFsbGJhY2sgKFVTRCBwZXIgMUsgdG9rZW5zKVxuY29uc3QgREVGQVVMVFM6IFJlY29yZDxQcm92aWRlciwgUHJpY2U+ID0ge1xuICBvcGVuYWk6IHsgaW5wdXRQZXIxazogMC4wMDIsIG91dHB1dFBlcjFrOiAwLjAwNiB9LFxuICBvcGVucm91dGVyOiB7IGlucHV0UGVyMWs6IDAuMDAxNSwgb3V0cHV0UGVyMWs6IDAuMDA1IH0sXG59O1xuXG5mdW5jdGlvbiBjYWNoZUtleShwcm92aWRlcjogUHJvdmlkZXIsIG1vZGVsOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gYCR7cHJvdmlkZXJ9OiR7bW9kZWx9YDtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByaWNpbmcocHJvdmlkZXI6IFByb3ZpZGVyLCBtb2RlbDogc3RyaW5nKTogUHJvbWlzZTxQcmljZT4ge1xuICBjb25zdCBrZXkgPSBjYWNoZUtleShwcm92aWRlciwgbW9kZWwpO1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBjb25zdCBoaXQgPSBjYWNoZVtrZXldO1xuICBpZiAoaGl0ICYmIG5vdyAtIGhpdC5hdCA8IFRUTF9NUykgcmV0dXJuIGhpdC5wcmljZTtcblxuICAvLyBUT0RPOiBSZXBsYWNlIHdpdGggcmVhbCBwcm92aWRlciBwcmljaW5nIGxvb2t1cCBlbmRwb2ludHMgaWYgYXZhaWxhYmxlXG4gIC8vIEZvciBub3csIHVzZSBwcm92aWRlciBkZWZhdWx0cyB3aXRoIHNpbXBsZSBoZXVyaXN0aWNzIHBlciBmYW1pbHlcbiAgY29uc3QgYmFzZSA9IERFRkFVTFRTW3Byb3ZpZGVyXTtcbiAgY29uc3QgZmFtaWx5ID0gbW9kZWwudG9Mb3dlckNhc2UoKTtcbiAgbGV0IHByaWNlID0gYmFzZTtcbiAgaWYgKGZhbWlseS5pbmNsdWRlcyhcImdwdC00XCIpKSB7XG4gICAgcHJpY2UgPSB7IGlucHV0UGVyMWs6IGJhc2UuaW5wdXRQZXIxayAqIDMsIG91dHB1dFBlcjFrOiBiYXNlLm91dHB1dFBlcjFrICogMyB9O1xuICB9IGVsc2UgaWYgKGZhbWlseS5pbmNsdWRlcyhcIm1pbmlcIikgfHwgZmFtaWx5LmluY2x1ZGVzKFwic21hbGxcIikpIHtcbiAgICBwcmljZSA9IHsgaW5wdXRQZXIxazogYmFzZS5pbnB1dFBlcjFrICogMC42LCBvdXRwdXRQZXIxazogYmFzZS5vdXRwdXRQZXIxayAqIDAuNiB9O1xuICB9XG4gIGNhY2hlW2tleV0gPSB7IHByaWNlLCBhdDogbm93IH07XG4gIHJldHVybiBwcmljZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVzdGltYXRlQ29zdFVzZEZyb21Vc2FnZShcbiAgcHJvdmlkZXI6IFByb3ZpZGVyLFxuICBtb2RlbDogc3RyaW5nLFxuICB1c2FnZT86IHsgaW5wdXRUb2tlbnM/OiBudW1iZXI7IG91dHB1dFRva2Vucz86IG51bWJlciB9LFxuKTogeyB1c2RJbjogbnVtYmVyOyB1c2RPdXQ6IG51bWJlciB9IHtcbiAgY29uc3QgaW5UID0gdXNhZ2U/LmlucHV0VG9rZW5zID8/IDA7XG4gIGNvbnN0IG91dFQgPSB1c2FnZT8ub3V0cHV0VG9rZW5zID8/IDA7XG4gIGNvbnN0IGtleSA9IGNhY2hlS2V5KHByb3ZpZGVyLCBtb2RlbCk7XG4gIGNvbnN0IHByaWNlID0gY2FjaGVba2V5XT8ucHJpY2UgPz8gREVGQVVMVFNbcHJvdmlkZXJdO1xuICByZXR1cm4geyB1c2RJbjogKGluVCAvIDEwMDApICogcHJpY2UuaW5wdXRQZXIxaywgdXNkT3V0OiAob3V0VCAvIDEwMDApICogcHJpY2Uub3V0cHV0UGVyMWsgfTtcbn1cbiJdLCJuYW1lcyI6WyJjYWNoZSIsIlRUTF9NUyIsIkRFRkFVTFRTIiwib3BlbmFpIiwiaW5wdXRQZXIxayIsIm91dHB1dFBlcjFrIiwib3BlbnJvdXRlciIsImNhY2hlS2V5IiwicHJvdmlkZXIiLCJtb2RlbCIsImdldFByaWNpbmciLCJrZXkiLCJub3ciLCJEYXRlIiwiaGl0IiwiYXQiLCJwcmljZSIsImJhc2UiLCJmYW1pbHkiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiZXN0aW1hdGVDb3N0VXNkRnJvbVVzYWdlIiwidXNhZ2UiLCJpblQiLCJpbnB1dFRva2VucyIsIm91dFQiLCJvdXRwdXRUb2tlbnMiLCJ1c2RJbiIsInVzZE91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/pricing.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        \"error\",\n        \"warn\"\n    ]\n});\nif (true) global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFPdkMsTUFBTUMsU0FDWEMsT0FBT0QsTUFBTSxJQUNiLElBQUlELHdEQUFZQSxDQUFDO0lBQ2ZHLEtBQUs7UUFBQztRQUFTO0tBQU87QUFDeEIsR0FBRztBQUVMLElBQUlDLElBQXFDLEVBQUVGLE9BQU9ELE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZ2VudC13YXJzLXdlYi8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXZhclxuICB2YXIgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWE6IFByaXNtYUNsaWVudCA9XG4gIGdsb2JhbC5wcmlzbWEgPz9cbiAgbmV3IFByaXNtYUNsaWVudCh7XG4gICAgbG9nOiBbXCJlcnJvclwiLCBcIndhcm5cIl0sXG4gIH0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSBnbG9iYWwucHJpc21hID0gcHJpc21hO1xuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdsb2JhbCIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/queue/bull.ts":
/*!*******************************!*\
  !*** ./src/lib/queue/bull.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addJob: () => (/* binding */ addJob),\n/* harmony export */   createQueue: () => (/* binding */ createQueue),\n/* harmony export */   createWorker: () => (/* binding */ createWorker),\n/* harmony export */   enqueue: () => (/* binding */ enqueue),\n/* harmony export */   getJobById: () => (/* binding */ getJobById),\n/* harmony export */   hasRedis: () => (/* binding */ hasRedis)\n/* harmony export */ });\n/* harmony import */ var bullmq__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bullmq */ \"(rsc)/./node_modules/bullmq/dist/esm/index.js\");\n\nfunction createQueue(name, cfg) {\n    const connection = new URL(cfg.redisUrl);\n    const queue = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Queue(name, {\n        connection: {\n            host: connection.hostname,\n            port: Number(connection.port) || 6379,\n            password: connection.password || undefined\n        }\n    });\n    const events = new bullmq__WEBPACK_IMPORTED_MODULE_0__.QueueEvents(name, {\n        connection: queue.opts.connection\n    });\n    return {\n        queue,\n        events\n    };\n}\nfunction createWorker(name, cfg, handler) {\n    const connection = new URL(cfg.redisUrl);\n    const worker = new bullmq__WEBPACK_IMPORTED_MODULE_0__.Worker(name, handler, {\n        connection: {\n            host: connection.hostname,\n            port: Number(connection.port) || 6379,\n            password: connection.password || undefined\n        }\n    });\n    return worker;\n}\nasync function addJob(queue, name, data, opts) {\n    return queue.add(name, data, opts);\n}\nfunction hasRedis() {\n    return typeof process !== \"undefined\" && !!process.env.REDIS_URL;\n}\nasync function enqueue(opts) {\n    if (!hasRedis()) return null;\n    // Lazy import only when enabled to avoid bundling\n    const { Queue } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! bullmq */ \"(rsc)/./node_modules/bullmq/dist/esm/index.js\"));\n    const connection = {\n        connection: {\n            url: process.env.REDIS_URL\n        }\n    };\n    const q = new Queue(opts.queueName, connection);\n    const job = await q.add(opts.queueName, opts.payload, {\n        removeOnComplete: {\n            age: 86400,\n            count: 1000\n        },\n        removeOnFail: {\n            age: 604800,\n            count: 1000\n        }\n    });\n    return {\n        id: job.id\n    };\n}\nasync function getJobById(queueName, id) {\n    if (!hasRedis()) return null;\n    const { Queue } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! bullmq */ \"(rsc)/./node_modules/bullmq/dist/esm/index.js\"));\n    const connection = {\n        connection: {\n            url: process.env.REDIS_URL\n        }\n    };\n    const q = new Queue(queueName, connection);\n    const job = await q.getJob(id);\n    if (!job) return null;\n    const state = await job.getState() || \"unknown\";\n    return {\n        id: job.id,\n        state\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3F1ZXVlL2J1bGwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEyRTtBQU1wRSxTQUFTRyxZQUFZQyxJQUFZLEVBQUVDLEdBQWU7SUFDdkQsTUFBTUMsYUFBYSxJQUFJQyxJQUFJRixJQUFJRyxRQUFRO0lBQ3ZDLE1BQU1DLFFBQVEsSUFBSVQseUNBQUtBLENBQUNJLE1BQU07UUFDNUJFLFlBQVk7WUFDVkksTUFBTUosV0FBV0ssUUFBUTtZQUN6QkMsTUFBTUMsT0FBT1AsV0FBV00sSUFBSSxLQUFLO1lBQ2pDRSxVQUFVUixXQUFXUSxRQUFRLElBQUlDO1FBQ25DO0lBQ0Y7SUFDQSxNQUFNQyxTQUFTLElBQUlkLCtDQUFXQSxDQUFDRSxNQUFNO1FBQUVFLFlBQVksTUFBZVcsSUFBSSxDQUFDWCxVQUFVO0lBQUM7SUFDbEYsT0FBTztRQUFFRztRQUFPTztJQUFPO0FBQ3pCO0FBRU8sU0FBU0UsYUFDZGQsSUFBWSxFQUNaQyxHQUFlLEVBQ2ZjLE9BQXVDO0lBRXZDLE1BQU1iLGFBQWEsSUFBSUMsSUFBSUYsSUFBSUcsUUFBUTtJQUN2QyxNQUFNWSxTQUFTLElBQUluQiwwQ0FBTUEsQ0FBQ0csTUFBTWUsU0FBUztRQUN2Q2IsWUFBWTtZQUNWSSxNQUFNSixXQUFXSyxRQUFRO1lBQ3pCQyxNQUFNQyxPQUFPUCxXQUFXTSxJQUFJLEtBQUs7WUFDakNFLFVBQVVSLFdBQVdRLFFBQVEsSUFBSUM7UUFDbkM7SUFDRjtJQUNBLE9BQU9LO0FBQ1Q7QUFFTyxlQUFlQyxPQUFVWixLQUFZLEVBQUVMLElBQVksRUFBRWtCLElBQU8sRUFBRUwsSUFBa0I7SUFDckYsT0FBT1IsTUFBTWMsR0FBRyxDQUFDbkIsTUFBTWtCLE1BQWFMO0FBQ3RDO0FBUU8sU0FBU087SUFDZCxPQUFPLE9BQU9DLFlBQVksZUFBZSxDQUFDLENBQUNBLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztBQUNsRTtBQUVPLGVBQWVDLFFBQVFYLElBQWlCO0lBQzdDLElBQUksQ0FBQ08sWUFBWSxPQUFPO0lBQ3hCLGtEQUFrRDtJQUNsRCxNQUFNLEVBQUV4QixLQUFLLEVBQUUsR0FBRyxNQUFNLG1KQUFnQjtJQUN4QyxNQUFNTSxhQUFhO1FBQUVBLFlBQVk7WUFBRXVCLEtBQUtKLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztRQUFXO0lBQUU7SUFDMUUsTUFBTUcsSUFBSSxJQUFJOUIsTUFBTWlCLEtBQUtjLFNBQVMsRUFBRXpCO0lBQ3BDLE1BQU0wQixNQUFNLE1BQU1GLEVBQUVQLEdBQUcsQ0FBQ04sS0FBS2MsU0FBUyxFQUFFZCxLQUFLZ0IsT0FBTyxFQUFFO1FBQ3BEQyxrQkFBa0I7WUFBRUMsS0FBSztZQUFPQyxPQUFPO1FBQUs7UUFDNUNDLGNBQWM7WUFBRUYsS0FBSztZQUFRQyxPQUFPO1FBQUs7SUFDM0M7SUFDQSxPQUFPO1FBQUVFLElBQUlOLElBQUlNLEVBQUU7SUFBVztBQUNoQztBQUVPLGVBQWVDLFdBQ3BCUixTQUFpQixFQUNqQk8sRUFBVTtJQUVWLElBQUksQ0FBQ2QsWUFBWSxPQUFPO0lBQ3hCLE1BQU0sRUFBRXhCLEtBQUssRUFBRSxHQUFHLE1BQU0sbUpBQWdCO0lBQ3hDLE1BQU1NLGFBQWE7UUFBRUEsWUFBWTtZQUFFdUIsS0FBS0osUUFBUUMsR0FBRyxDQUFDQyxTQUFTO1FBQVc7SUFBRTtJQUMxRSxNQUFNRyxJQUFJLElBQUk5QixNQUFNK0IsV0FBV3pCO0lBQy9CLE1BQU0wQixNQUFNLE1BQU1GLEVBQUVVLE1BQU0sQ0FBQ0Y7SUFDM0IsSUFBSSxDQUFDTixLQUFLLE9BQU87SUFDakIsTUFBTVMsUUFBUSxNQUFPVCxJQUFJVSxRQUFRLE1BQU87SUFDeEMsT0FBTztRQUFFSixJQUFJTixJQUFJTSxFQUFFO1FBQVlHO0lBQU07QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZ2VudC13YXJzLXdlYi8uL3NyYy9saWIvcXVldWUvYnVsbC50cz8xYmY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXVlLCBXb3JrZXIsIEpvYnNPcHRpb25zLCBRdWV1ZUV2ZW50cywgdHlwZSBKb2IgfSBmcm9tIFwiYnVsbG1xXCI7XG5cbmV4cG9ydCB0eXBlIEJ1bGxDb25maWcgPSB7XG4gIHJlZGlzVXJsOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUXVldWUobmFtZTogc3RyaW5nLCBjZmc6IEJ1bGxDb25maWcpIHtcbiAgY29uc3QgY29ubmVjdGlvbiA9IG5ldyBVUkwoY2ZnLnJlZGlzVXJsKTtcbiAgY29uc3QgcXVldWUgPSBuZXcgUXVldWUobmFtZSwge1xuICAgIGNvbm5lY3Rpb246IHtcbiAgICAgIGhvc3Q6IGNvbm5lY3Rpb24uaG9zdG5hbWUsXG4gICAgICBwb3J0OiBOdW1iZXIoY29ubmVjdGlvbi5wb3J0KSB8fCA2Mzc5LFxuICAgICAgcGFzc3dvcmQ6IGNvbm5lY3Rpb24ucGFzc3dvcmQgfHwgdW5kZWZpbmVkLFxuICAgIH0gYXMgYW55LFxuICB9KTtcbiAgY29uc3QgZXZlbnRzID0gbmV3IFF1ZXVlRXZlbnRzKG5hbWUsIHsgY29ubmVjdGlvbjogKHF1ZXVlIGFzIGFueSkub3B0cy5jb25uZWN0aW9uIH0pO1xuICByZXR1cm4geyBxdWV1ZSwgZXZlbnRzIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXb3JrZXIoXG4gIG5hbWU6IHN0cmluZyxcbiAgY2ZnOiBCdWxsQ29uZmlnLFxuICBoYW5kbGVyOiAoam9iOiBKb2IpID0+IFByb21pc2U8dW5rbm93bj4sXG4pIHtcbiAgY29uc3QgY29ubmVjdGlvbiA9IG5ldyBVUkwoY2ZnLnJlZGlzVXJsKTtcbiAgY29uc3Qgd29ya2VyID0gbmV3IFdvcmtlcihuYW1lLCBoYW5kbGVyLCB7XG4gICAgY29ubmVjdGlvbjoge1xuICAgICAgaG9zdDogY29ubmVjdGlvbi5ob3N0bmFtZSxcbiAgICAgIHBvcnQ6IE51bWJlcihjb25uZWN0aW9uLnBvcnQpIHx8IDYzNzksXG4gICAgICBwYXNzd29yZDogY29ubmVjdGlvbi5wYXNzd29yZCB8fCB1bmRlZmluZWQsXG4gICAgfSBhcyBhbnksXG4gIH0pO1xuICByZXR1cm4gd29ya2VyO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRkSm9iPFQ+KHF1ZXVlOiBRdWV1ZSwgbmFtZTogc3RyaW5nLCBkYXRhOiBULCBvcHRzPzogSm9ic09wdGlvbnMpIHtcbiAgcmV0dXJuIHF1ZXVlLmFkZChuYW1lLCBkYXRhIGFzIGFueSwgb3B0cyk7XG59XG5cbi8vIE9wdGlvbmFsIEJ1bGxNUSBhZGFwdGVyIChndWFyZGVkIGJ5IFJFRElTX1VSTCkuIE5vLW9wIGJ5IGRlZmF1bHQuXG5leHBvcnQgdHlwZSBFbnF1ZXVlT3B0cyA9IHtcbiAgcXVldWVOYW1lOiBzdHJpbmc7XG4gIHBheWxvYWQ6IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGhhc1JlZGlzKCk6IGJvb2xlYW4ge1xuICByZXR1cm4gdHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgISFwcm9jZXNzLmVudi5SRURJU19VUkw7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbnF1ZXVlKG9wdHM6IEVucXVldWVPcHRzKTogUHJvbWlzZTx7IGlkOiBzdHJpbmcgfSB8IG51bGw+IHtcbiAgaWYgKCFoYXNSZWRpcygpKSByZXR1cm4gbnVsbDtcbiAgLy8gTGF6eSBpbXBvcnQgb25seSB3aGVuIGVuYWJsZWQgdG8gYXZvaWQgYnVuZGxpbmdcbiAgY29uc3QgeyBRdWV1ZSB9ID0gYXdhaXQgaW1wb3J0KFwiYnVsbG1xXCIpO1xuICBjb25zdCBjb25uZWN0aW9uID0geyBjb25uZWN0aW9uOiB7IHVybDogcHJvY2Vzcy5lbnYuUkVESVNfVVJMIGFzIHN0cmluZyB9IH0gYXMgYW55O1xuICBjb25zdCBxID0gbmV3IFF1ZXVlKG9wdHMucXVldWVOYW1lLCBjb25uZWN0aW9uKTtcbiAgY29uc3Qgam9iID0gYXdhaXQgcS5hZGQob3B0cy5xdWV1ZU5hbWUsIG9wdHMucGF5bG9hZCwge1xuICAgIHJlbW92ZU9uQ29tcGxldGU6IHsgYWdlOiA4NjQwMCwgY291bnQ6IDEwMDAgfSxcbiAgICByZW1vdmVPbkZhaWw6IHsgYWdlOiA2MDQ4MDAsIGNvdW50OiAxMDAwIH0sXG4gIH0pO1xuICByZXR1cm4geyBpZDogam9iLmlkIGFzIHN0cmluZyB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Sm9iQnlJZChcbiAgcXVldWVOYW1lOiBzdHJpbmcsXG4gIGlkOiBzdHJpbmcsXG4pOiBQcm9taXNlPHsgaWQ6IHN0cmluZzsgc3RhdGU6IHN0cmluZyB9IHwgbnVsbD4ge1xuICBpZiAoIWhhc1JlZGlzKCkpIHJldHVybiBudWxsO1xuICBjb25zdCB7IFF1ZXVlIH0gPSBhd2FpdCBpbXBvcnQoXCJidWxsbXFcIik7XG4gIGNvbnN0IGNvbm5lY3Rpb24gPSB7IGNvbm5lY3Rpb246IHsgdXJsOiBwcm9jZXNzLmVudi5SRURJU19VUkwgYXMgc3RyaW5nIH0gfSBhcyBhbnk7XG4gIGNvbnN0IHEgPSBuZXcgUXVldWUocXVldWVOYW1lLCBjb25uZWN0aW9uKTtcbiAgY29uc3Qgam9iID0gYXdhaXQgcS5nZXRKb2IoaWQpO1xuICBpZiAoIWpvYikgcmV0dXJuIG51bGw7XG4gIGNvbnN0IHN0YXRlID0gKGF3YWl0IGpvYi5nZXRTdGF0ZSgpKSB8fCBcInVua25vd25cIjtcbiAgcmV0dXJuIHsgaWQ6IGpvYi5pZCBhcyBzdHJpbmcsIHN0YXRlIH07XG59XG4iXSwibmFtZXMiOlsiUXVldWUiLCJXb3JrZXIiLCJRdWV1ZUV2ZW50cyIsImNyZWF0ZVF1ZXVlIiwibmFtZSIsImNmZyIsImNvbm5lY3Rpb24iLCJVUkwiLCJyZWRpc1VybCIsInF1ZXVlIiwiaG9zdCIsImhvc3RuYW1lIiwicG9ydCIsIk51bWJlciIsInBhc3N3b3JkIiwidW5kZWZpbmVkIiwiZXZlbnRzIiwib3B0cyIsImNyZWF0ZVdvcmtlciIsImhhbmRsZXIiLCJ3b3JrZXIiLCJhZGRKb2IiLCJkYXRhIiwiYWRkIiwiaGFzUmVkaXMiLCJwcm9jZXNzIiwiZW52IiwiUkVESVNfVVJMIiwiZW5xdWV1ZSIsInVybCIsInEiLCJxdWV1ZU5hbWUiLCJqb2IiLCJwYXlsb2FkIiwicmVtb3ZlT25Db21wbGV0ZSIsImFnZSIsImNvdW50IiwicmVtb3ZlT25GYWlsIiwiaWQiLCJnZXRKb2JCeUlkIiwiZ2V0Sm9iIiwic3RhdGUiLCJnZXRTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/queue/bull.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/runners.ts":
/*!****************************!*\
  !*** ./src/lib/runners.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runBattle: () => (/* binding */ runBattle),\n/* harmony export */   runScaleTest: () => (/* binding */ runScaleTest)\n/* harmony export */ });\n/* harmony import */ var _lib_llm_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/llm/provider */ \"(rsc)/./src/lib/llm/provider.ts\");\n/* harmony import */ var _repo_conversations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/repo/conversations */ \"(rsc)/./src/repo/conversations.ts\");\n/* harmony import */ var _repo_runReports__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/repo/runReports */ \"(rsc)/./src/repo/runReports.ts\");\n/* harmony import */ var _lib_summarizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/summarizer */ \"(rsc)/./src/lib/summarizer.ts\");\n/* harmony import */ var _lib_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/config */ \"(rsc)/./src/lib/config.ts\");\n/* harmony import */ var _lib_pricing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/pricing */ \"(rsc)/./src/lib/pricing.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n\n\n\n\n\nasync function estimateTurnCost(provider, model, usage) {\n    try {\n        await (0,_lib_pricing__WEBPACK_IMPORTED_MODULE_5__.getPricing)(provider, model);\n    } catch  {}\n    return (0,_lib_pricing__WEBPACK_IMPORTED_MODULE_5__.estimateCostUsdFromUsage)(provider, model, usage);\n}\nasync function runBattle(input, onDelta, signal) {\n    const cfg = (0,_lib_config__WEBPACK_IMPORTED_MODULE_4__.getConfig)();\n    // In tests, exercise full logic paths using mocks instead of hard short-circuiting\n    let conversationId = null;\n    try {\n        const convo = await (0,_repo_conversations__WEBPACK_IMPORTED_MODULE_1__.createConversation)({\n            agentId: input.agentId,\n            model: input.model,\n            systemPrompt: input.systemPrompt,\n            goal: input.goal,\n            messageLimit: input.messageLimit,\n            runId: input.runId\n        });\n        conversationId = convo.id;\n    } catch  {}\n    const acc = {\n        usdIn: 0,\n        usdOut: 0,\n        inputTokens: 0,\n        outputTokens: 0\n    };\n    const messages = [];\n    if (input.systemPrompt) messages.push({\n        role: \"system\",\n        content: input.systemPrompt\n    });\n    if (input.userMessage) {\n        if (conversationId) {\n            try {\n                await (0,_repo_conversations__WEBPACK_IMPORTED_MODULE_1__.appendMessage)(conversationId, {\n                    role: \"user\",\n                    content: input.userMessage\n                });\n            } catch  {}\n        }\n        messages.push({\n            role: \"user\",\n            content: input.userMessage\n        });\n    }\n    let goalReached = false;\n    let endedReason = \"limit\";\n    const limit = input.messageLimit ?? 25;\n    const usdCap = cfg.maxUsdPerConversation;\n    while(true){\n        if (signal?.aborted) {\n            endedReason = signal.reason === \"timeout\" ? \"timeout\" : \"manual\";\n            break;\n        }\n        if (messages.length >= limit) {\n            endedReason = \"limit\";\n            break;\n        }\n        const res = await (0,_lib_llm_provider__WEBPACK_IMPORTED_MODULE_0__.chat)(messages, {\n            provider: input.provider,\n            model: input.model,\n            maxTokens: input.maxTokens,\n            temperature: input.temperature\n        });\n        const text = res.text ?? \"\";\n        const usage = res.usage;\n        const { usdIn, usdOut } = await estimateTurnCost(input.provider, input.model, usage);\n        acc.usdIn += usdIn;\n        acc.usdOut += usdOut;\n        acc.inputTokens += usage?.inputTokens ?? 0;\n        acc.outputTokens += usage?.outputTokens ?? 0;\n        const turnCost = usdIn + usdOut;\n        if (conversationId) {\n            try {\n                await (0,_repo_conversations__WEBPACK_IMPORTED_MODULE_1__.appendMessage)(conversationId, {\n                    role: \"assistant\",\n                    content: text,\n                    tokensIn: usage?.inputTokens,\n                    tokensOut: usage?.outputTokens,\n                    costUsd: turnCost\n                });\n            } catch  {}\n        }\n        messages.push({\n            role: \"assistant\",\n            content: text\n        });\n        if (text) onDelta?.(text);\n        if (input.goal && text.toLowerCase().includes(input.goal.toLowerCase())) {\n            goalReached = true;\n            endedReason = \"goal\";\n            break;\n        }\n        // Stop after a single turn if user message not provided (avoid infinite loop)\n        if (!input.userMessage) {\n            endedReason = \"limit\";\n            break;\n        }\n        // Budget cap check after recording this turn\n        if (typeof usdCap === \"number\" && usdCap >= 0 && acc.usdIn + acc.usdOut >= usdCap) {\n            endedReason = \"limit\";\n            break;\n        }\n        // Early exit if aborted after a turn\n        if (signal?.aborted) {\n            endedReason = signal.reason === \"timeout\" ? \"timeout\" : \"manual\";\n            break;\n        }\n    }\n    if (conversationId) {\n        try {\n            await (0,_repo_conversations__WEBPACK_IMPORTED_MODULE_1__.completeConversation)(conversationId, {\n                endedReason,\n                goalReached\n            });\n        } catch  {}\n    }\n    return {\n        conversationId: conversationId ?? \"\",\n        goalReached,\n        endedReason,\n        messageCount: messages.length - (input.systemPrompt ? 1 : 0)\n    };\n}\nasync function runScaleTest(input) {\n    // In tests, allow the normal flow to run using mocked deps for better coverage\n    if (process.env.E2E_MODE === \"1\") {\n        const total = input.runs;\n        const succeeded = total;\n        const failed = 0;\n        return {\n            runId: input.runId,\n            total,\n            succeeded,\n            failed,\n            conversationIds: []\n        };\n    }\n    const tasks = Array.from({\n        length: input.runs\n    }).map((_, i)=>runBattle({\n            runId: `${input.runId}-${i + 1}`,\n            agentId: input.agentId,\n            provider: input.provider,\n            model: input.model,\n            systemPrompt: input.systemPrompt,\n            userMessage: input.userMessage\n        }));\n    const results = await Promise.allSettled(tasks);\n    let succeeded = 0;\n    const failures = [];\n    const conversationIds = [];\n    for (const r of results){\n        if (r.status === \"fulfilled\") {\n            succeeded += 1;\n            conversationIds.push(r.value.conversationId);\n        } else {\n            failures.push({\n                error: String(r.reason)\n            });\n        }\n    }\n    const total = input.runs;\n    const failed = total - succeeded;\n    // Build runs summary with sampled transcript and flags under a tight budget\n    const SAMPLE_FIRST = 2;\n    const SAMPLE_LAST = 2;\n    const conversations = await Promise.all(conversationIds.map(async (id)=>{\n        try {\n            const convo = await _lib_prisma__WEBPACK_IMPORTED_MODULE_6__.prisma.conversation.findUnique({\n                where: {\n                    id\n                },\n                select: {\n                    goal: true,\n                    goalReached: true,\n                    endedReason: true\n                }\n            });\n            const all = await _lib_prisma__WEBPACK_IMPORTED_MODULE_6__.prisma.message.findMany({\n                where: {\n                    conversationId: id\n                },\n                orderBy: {\n                    createdAt: \"asc\"\n                },\n                select: {\n                    role: true,\n                    content: true\n                }\n            });\n            // first N system/user messages\n            const head = all.filter((m)=>m.role === \"system\" || m.role === \"user\").slice(0, SAMPLE_FIRST);\n            // last M assistant messages (from the end backwards)\n            const assistants = all.filter((m)=>m.role === \"assistant\");\n            const tail = assistants.slice(Math.max(0, assistants.length - SAMPLE_LAST));\n            const sampled = [\n                ...head,\n                ...tail\n            ];\n            return {\n                id,\n                model: input.model,\n                goal: convo?.goal ?? undefined,\n                goalReached: Boolean(convo?.goalReached),\n                endedReason: convo?.endedReason ?? null,\n                messages: sampled\n            };\n        } catch  {\n            return {\n                id,\n                model: input.model,\n                goal: undefined,\n                goalReached: false,\n                endedReason: null,\n                messages: []\n            };\n        }\n    }));\n    const runsLite = {\n        conversations,\n        stats: {\n            succeeded,\n            failed\n        }\n    };\n    let summaryText = \"\";\n    let revisedPrompt = \"\";\n    let rationale = \"\";\n    try {\n        const sum = await (0,_lib_summarizer__WEBPACK_IMPORTED_MODULE_3__.summarizeRuns)(runsLite, {\n            provider: input.provider,\n            model: input.model\n        });\n        summaryText = sum.summary;\n        revisedPrompt = sum.revisedPrompt;\n        rationale = sum.rationale;\n    } catch  {\n    // tolerate summarizer failure\n    }\n    await (0,_repo_runReports__WEBPACK_IMPORTED_MODULE_2__.saveRunReport)({\n        runId: input.runId,\n        agentId: input.agentId,\n        model: input.model,\n        systemPrompt: input.systemPrompt,\n        runCount: total,\n        failures,\n        summary: summaryText,\n        revisedPrompt,\n        stats: {\n            succeeded,\n            failed,\n            conversationIds,\n            rationale\n        }\n    });\n    return {\n        runId: input.runId,\n        total,\n        succeeded,\n        failed,\n        conversationIds\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/runners.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/summarizer.ts":
/*!*******************************!*\
  !*** ./src/lib/summarizer.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   summarizeRuns: () => (/* binding */ summarizeRuns)\n/* harmony export */ });\n/* harmony import */ var _lib_llm_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/llm/provider */ \"(rsc)/./src/lib/llm/provider.ts\");\n/* harmony import */ var _lib_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/config */ \"(rsc)/./src/lib/config.ts\");\n\n\nconst SYSTEM = `You are PromptBro Analyst. Given multiple conversations with outcomes and failure cases, produce STRICT JSON with keys: summary (string), revisedPrompt (string), rationale (string).\n\nHard constraints:\n- rationale must be concise (<=100 words)\n- no hidden reasoning or chain-of-thought; only the three fields above\n- if any required fact is missing, set the field value to \"information unavailable\"`;\nasync function summarizeRuns(input, opts) {\n    if (process.env.E2E_MODE === \"1\") {\n        return {\n            summary: `E2E summary: ${input.stats.succeeded} ok / ${input.stats.failed} failed`,\n            revisedPrompt: \"E2E revised prompt\",\n            rationale: \"E2E rationale\"\n        };\n    }\n    const user = JSON.stringify(input);\n    const cfg = (0,_lib_config__WEBPACK_IMPORTED_MODULE_1__.getConfig)();\n    const provider = opts?.provider ?? \"openai\";\n    const model = cfg.summarizerModel ?? opts?.model ?? \"gpt-4o-mini\";\n    const res = await (0,_lib_llm_provider__WEBPACK_IMPORTED_MODULE_0__.chat)([\n        {\n            role: \"system\",\n            content: SYSTEM\n        },\n        {\n            role: \"user\",\n            content: user\n        }\n    ], {\n        provider,\n        model,\n        maxTokens: 512,\n        temperature: 0.2\n    });\n    const text = res.text || \"\";\n    let parsed;\n    try {\n        parsed = JSON.parse(text);\n    } catch  {\n        parsed = {};\n    }\n    // Normalize fields and enforce policy\n    let summary = typeof parsed.summary === \"string\" && parsed.summary.trim().length > 0 ? parsed.summary : \"information unavailable\";\n    let revisedPrompt = typeof parsed.revisedPrompt === \"string\" && parsed.revisedPrompt.trim().length > 0 ? parsed.revisedPrompt : \"information unavailable\";\n    let rationale = typeof parsed.rationale === \"string\" && parsed.rationale.trim().length > 0 ? parsed.rationale : \"information unavailable\";\n    // Enforce <= 100 words for rationale\n    if (rationale !== \"information unavailable\") {\n        const words = rationale.trim().split(/\\s+/);\n        if (words.length > 100) {\n            rationale = words.slice(0, 100).join(\" \") + \" …\";\n        }\n    }\n    // Very light guard against chain-of-thought style disclosures\n    const cotMarkers = [\n        \"chain-of-thought\",\n        \"reasoning steps:\",\n        \"step-by-step\",\n        \"let's think\",\n        \"therefore\",\n        \"because\"\n    ];\n    if (rationale !== \"information unavailable\") {\n        const lower = rationale.toLowerCase();\n        if (cotMarkers.some((m)=>lower.includes(m))) {\n            rationale = \"information unavailable\";\n        }\n    }\n    return {\n        summary,\n        revisedPrompt,\n        rationale\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1bW1hcml6ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ0Q7QUFvQnpDLE1BQU1FLFNBQVMsQ0FBQzs7Ozs7bUZBS21FLENBQUM7QUFFN0UsZUFBZUMsY0FDcEJDLEtBQWUsRUFDZkMsSUFBNkQ7SUFFN0QsSUFBSUMsUUFBUUMsR0FBRyxDQUFDQyxRQUFRLEtBQUssS0FBSztRQUNoQyxPQUFPO1lBQ0xDLFNBQVMsQ0FBQyxhQUFhLEVBQUVMLE1BQU1NLEtBQUssQ0FBQ0MsU0FBUyxDQUFDLE1BQU0sRUFBRVAsTUFBTU0sS0FBSyxDQUFDRSxNQUFNLENBQUMsT0FBTyxDQUFDO1lBQ2xGQyxlQUFlO1lBQ2ZDLFdBQVc7UUFDYjtJQUNGO0lBQ0EsTUFBTUMsT0FBT0MsS0FBS0MsU0FBUyxDQUFDYjtJQUM1QixNQUFNYyxNQUFNakIsc0RBQVNBO0lBQ3JCLE1BQU1rQixXQUFXZCxNQUFNYyxZQUFZO0lBQ25DLE1BQU1DLFFBQVFGLElBQUlHLGVBQWUsSUFBSWhCLE1BQU1lLFNBQVM7SUFDcEQsTUFBTUUsTUFBTSxNQUFNdEIsdURBQUlBLENBQ3BCO1FBQ0U7WUFBRXVCLE1BQU07WUFBVUMsU0FBU3RCO1FBQU87UUFDbEM7WUFBRXFCLE1BQU07WUFBUUMsU0FBU1Q7UUFBSztLQUMvQixFQUNEO1FBQ0VJO1FBQ0FDO1FBQ0FLLFdBQVc7UUFDWEMsYUFBYTtJQUNmO0lBR0YsTUFBTUMsT0FBT0wsSUFBSUssSUFBSSxJQUFJO0lBQ3pCLElBQUlDO0lBQ0osSUFBSTtRQUNGQSxTQUFTWixLQUFLYSxLQUFLLENBQUNGO0lBQ3RCLEVBQUUsT0FBTTtRQUNOQyxTQUFTLENBQUM7SUFDWjtJQUVBLHNDQUFzQztJQUN0QyxJQUFJbkIsVUFDRixPQUFPbUIsT0FBT25CLE9BQU8sS0FBSyxZQUFZbUIsT0FBT25CLE9BQU8sQ0FBQ3FCLElBQUksR0FBR0MsTUFBTSxHQUFHLElBQ2pFSCxPQUFPbkIsT0FBTyxHQUNkO0lBQ04sSUFBSUksZ0JBQ0YsT0FBT2UsT0FBT2YsYUFBYSxLQUFLLFlBQVllLE9BQU9mLGFBQWEsQ0FBQ2lCLElBQUksR0FBR0MsTUFBTSxHQUFHLElBQzdFSCxPQUFPZixhQUFhLEdBQ3BCO0lBQ04sSUFBSUMsWUFDRixPQUFPYyxPQUFPZCxTQUFTLEtBQUssWUFBWWMsT0FBT2QsU0FBUyxDQUFDZ0IsSUFBSSxHQUFHQyxNQUFNLEdBQUcsSUFDckVILE9BQU9kLFNBQVMsR0FDaEI7SUFFTixxQ0FBcUM7SUFDckMsSUFBSUEsY0FBYywyQkFBMkI7UUFDM0MsTUFBTWtCLFFBQVFsQixVQUFVZ0IsSUFBSSxHQUFHRyxLQUFLLENBQUM7UUFDckMsSUFBSUQsTUFBTUQsTUFBTSxHQUFHLEtBQUs7WUFDdEJqQixZQUFZa0IsTUFBTUUsS0FBSyxDQUFDLEdBQUcsS0FBS0MsSUFBSSxDQUFDLE9BQU87UUFDOUM7SUFDRjtJQUVBLDhEQUE4RDtJQUM5RCxNQUFNQyxhQUFhO1FBQ2pCO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBQ0QsSUFBSXRCLGNBQWMsMkJBQTJCO1FBQzNDLE1BQU11QixRQUFRdkIsVUFBVXdCLFdBQVc7UUFDbkMsSUFBSUYsV0FBV0csSUFBSSxDQUFDLENBQUNDLElBQU1ILE1BQU1JLFFBQVEsQ0FBQ0QsS0FBSztZQUM3QzFCLFlBQVk7UUFDZDtJQUNGO0lBRUEsT0FBTztRQUFFTDtRQUFTSTtRQUFlQztJQUFVO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWdlbnQtd2Fycy13ZWIvLi9zcmMvbGliL3N1bW1hcml6ZXIudHM/MzRlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGF0IH0gZnJvbSBcIkAvbGliL2xsbS9wcm92aWRlclwiO1xuaW1wb3J0IHsgZ2V0Q29uZmlnIH0gZnJvbSBcIkAvbGliL2NvbmZpZ1wiO1xuXG5leHBvcnQgdHlwZSBSdW5zTGl0ZSA9IHtcbiAgY29udmVyc2F0aW9uczogQXJyYXk8e1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbW9kZWw6IHN0cmluZztcbiAgICBnb2FsPzogc3RyaW5nIHwgbnVsbDtcbiAgICBnb2FsUmVhY2hlZDogYm9vbGVhbjtcbiAgICBlbmRlZFJlYXNvbj86IFwiZ29hbFwiIHwgXCJsaW1pdFwiIHwgXCJlcnJvclwiIHwgXCJtYW51YWxcIiB8IFwidGltZW91dFwiIHwgbnVsbDtcbiAgICBtZXNzYWdlczogQXJyYXk8eyByb2xlOiBcInN5c3RlbVwiIHwgXCJ1c2VyXCIgfCBcImFzc2lzdGFudFwiIHwgXCJ0b29sXCI7IGNvbnRlbnQ6IHN0cmluZyB9PjtcbiAgfT47XG4gIHN0YXRzOiB7IHN1Y2NlZWRlZDogbnVtYmVyOyBmYWlsZWQ6IG51bWJlciB9O1xufTtcblxuZXhwb3J0IHR5cGUgU3VtbWFyeVJlc3VsdCA9IHtcbiAgc3VtbWFyeTogc3RyaW5nO1xuICByZXZpc2VkUHJvbXB0OiBzdHJpbmc7XG4gIHJhdGlvbmFsZTogc3RyaW5nO1xufTtcblxuY29uc3QgU1lTVEVNID0gYFlvdSBhcmUgUHJvbXB0QnJvIEFuYWx5c3QuIEdpdmVuIG11bHRpcGxlIGNvbnZlcnNhdGlvbnMgd2l0aCBvdXRjb21lcyBhbmQgZmFpbHVyZSBjYXNlcywgcHJvZHVjZSBTVFJJQ1QgSlNPTiB3aXRoIGtleXM6IHN1bW1hcnkgKHN0cmluZyksIHJldmlzZWRQcm9tcHQgKHN0cmluZyksIHJhdGlvbmFsZSAoc3RyaW5nKS5cblxuSGFyZCBjb25zdHJhaW50czpcbi0gcmF0aW9uYWxlIG11c3QgYmUgY29uY2lzZSAoPD0xMDAgd29yZHMpXG4tIG5vIGhpZGRlbiByZWFzb25pbmcgb3IgY2hhaW4tb2YtdGhvdWdodDsgb25seSB0aGUgdGhyZWUgZmllbGRzIGFib3ZlXG4tIGlmIGFueSByZXF1aXJlZCBmYWN0IGlzIG1pc3NpbmcsIHNldCB0aGUgZmllbGQgdmFsdWUgdG8gXCJpbmZvcm1hdGlvbiB1bmF2YWlsYWJsZVwiYDtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1bW1hcml6ZVJ1bnMoXG4gIGlucHV0OiBSdW5zTGl0ZSxcbiAgb3B0cz86IHsgcHJvdmlkZXI/OiBcIm9wZW5haVwiIHwgXCJvcGVucm91dGVyXCI7IG1vZGVsPzogc3RyaW5nIH0sXG4pIHtcbiAgaWYgKHByb2Nlc3MuZW52LkUyRV9NT0RFID09PSBcIjFcIikge1xuICAgIHJldHVybiB7XG4gICAgICBzdW1tYXJ5OiBgRTJFIHN1bW1hcnk6ICR7aW5wdXQuc3RhdHMuc3VjY2VlZGVkfSBvayAvICR7aW5wdXQuc3RhdHMuZmFpbGVkfSBmYWlsZWRgLFxuICAgICAgcmV2aXNlZFByb21wdDogXCJFMkUgcmV2aXNlZCBwcm9tcHRcIixcbiAgICAgIHJhdGlvbmFsZTogXCJFMkUgcmF0aW9uYWxlXCIsXG4gICAgfSBhcyBTdW1tYXJ5UmVzdWx0O1xuICB9XG4gIGNvbnN0IHVzZXIgPSBKU09OLnN0cmluZ2lmeShpbnB1dCk7XG4gIGNvbnN0IGNmZyA9IGdldENvbmZpZygpO1xuICBjb25zdCBwcm92aWRlciA9IG9wdHM/LnByb3ZpZGVyID8/IFwib3BlbmFpXCI7XG4gIGNvbnN0IG1vZGVsID0gY2ZnLnN1bW1hcml6ZXJNb2RlbCA/PyBvcHRzPy5tb2RlbCA/PyBcImdwdC00by1taW5pXCI7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGNoYXQoXG4gICAgW1xuICAgICAgeyByb2xlOiBcInN5c3RlbVwiLCBjb250ZW50OiBTWVNURU0gfSxcbiAgICAgIHsgcm9sZTogXCJ1c2VyXCIsIGNvbnRlbnQ6IHVzZXIgfSxcbiAgICBdLFxuICAgIHtcbiAgICAgIHByb3ZpZGVyLFxuICAgICAgbW9kZWwsXG4gICAgICBtYXhUb2tlbnM6IDUxMixcbiAgICAgIHRlbXBlcmF0dXJlOiAwLjIsXG4gICAgfSxcbiAgKTtcblxuICBjb25zdCB0ZXh0ID0gcmVzLnRleHQgfHwgXCJcIjtcbiAgbGV0IHBhcnNlZDogUGFydGlhbDxTdW1tYXJ5UmVzdWx0PjtcbiAgdHJ5IHtcbiAgICBwYXJzZWQgPSBKU09OLnBhcnNlKHRleHQpIGFzIFBhcnRpYWw8U3VtbWFyeVJlc3VsdD47XG4gIH0gY2F0Y2gge1xuICAgIHBhcnNlZCA9IHt9O1xuICB9XG5cbiAgLy8gTm9ybWFsaXplIGZpZWxkcyBhbmQgZW5mb3JjZSBwb2xpY3lcbiAgbGV0IHN1bW1hcnkgPVxuICAgIHR5cGVvZiBwYXJzZWQuc3VtbWFyeSA9PT0gXCJzdHJpbmdcIiAmJiBwYXJzZWQuc3VtbWFyeS50cmltKCkubGVuZ3RoID4gMFxuICAgICAgPyBwYXJzZWQuc3VtbWFyeVxuICAgICAgOiBcImluZm9ybWF0aW9uIHVuYXZhaWxhYmxlXCI7XG4gIGxldCByZXZpc2VkUHJvbXB0ID1cbiAgICB0eXBlb2YgcGFyc2VkLnJldmlzZWRQcm9tcHQgPT09IFwic3RyaW5nXCIgJiYgcGFyc2VkLnJldmlzZWRQcm9tcHQudHJpbSgpLmxlbmd0aCA+IDBcbiAgICAgID8gcGFyc2VkLnJldmlzZWRQcm9tcHRcbiAgICAgIDogXCJpbmZvcm1hdGlvbiB1bmF2YWlsYWJsZVwiO1xuICBsZXQgcmF0aW9uYWxlID1cbiAgICB0eXBlb2YgcGFyc2VkLnJhdGlvbmFsZSA9PT0gXCJzdHJpbmdcIiAmJiBwYXJzZWQucmF0aW9uYWxlLnRyaW0oKS5sZW5ndGggPiAwXG4gICAgICA/IHBhcnNlZC5yYXRpb25hbGVcbiAgICAgIDogXCJpbmZvcm1hdGlvbiB1bmF2YWlsYWJsZVwiO1xuXG4gIC8vIEVuZm9yY2UgPD0gMTAwIHdvcmRzIGZvciByYXRpb25hbGVcbiAgaWYgKHJhdGlvbmFsZSAhPT0gXCJpbmZvcm1hdGlvbiB1bmF2YWlsYWJsZVwiKSB7XG4gICAgY29uc3Qgd29yZHMgPSByYXRpb25hbGUudHJpbSgpLnNwbGl0KC9cXHMrLyk7XG4gICAgaWYgKHdvcmRzLmxlbmd0aCA+IDEwMCkge1xuICAgICAgcmF0aW9uYWxlID0gd29yZHMuc2xpY2UoMCwgMTAwKS5qb2luKFwiIFwiKSArIFwiIOKAplwiO1xuICAgIH1cbiAgfVxuXG4gIC8vIFZlcnkgbGlnaHQgZ3VhcmQgYWdhaW5zdCBjaGFpbi1vZi10aG91Z2h0IHN0eWxlIGRpc2Nsb3N1cmVzXG4gIGNvbnN0IGNvdE1hcmtlcnMgPSBbXG4gICAgXCJjaGFpbi1vZi10aG91Z2h0XCIsXG4gICAgXCJyZWFzb25pbmcgc3RlcHM6XCIsXG4gICAgXCJzdGVwLWJ5LXN0ZXBcIixcbiAgICBcImxldCdzIHRoaW5rXCIsXG4gICAgXCJ0aGVyZWZvcmVcIixcbiAgICBcImJlY2F1c2VcIixcbiAgXTtcbiAgaWYgKHJhdGlvbmFsZSAhPT0gXCJpbmZvcm1hdGlvbiB1bmF2YWlsYWJsZVwiKSB7XG4gICAgY29uc3QgbG93ZXIgPSByYXRpb25hbGUudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoY290TWFya2Vycy5zb21lKChtKSA9PiBsb3dlci5pbmNsdWRlcyhtKSkpIHtcbiAgICAgIHJhdGlvbmFsZSA9IFwiaW5mb3JtYXRpb24gdW5hdmFpbGFibGVcIjtcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBzdW1tYXJ5LCByZXZpc2VkUHJvbXB0LCByYXRpb25hbGUgfSBhcyBTdW1tYXJ5UmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbImNoYXQiLCJnZXRDb25maWciLCJTWVNURU0iLCJzdW1tYXJpemVSdW5zIiwiaW5wdXQiLCJvcHRzIiwicHJvY2VzcyIsImVudiIsIkUyRV9NT0RFIiwic3VtbWFyeSIsInN0YXRzIiwic3VjY2VlZGVkIiwiZmFpbGVkIiwicmV2aXNlZFByb21wdCIsInJhdGlvbmFsZSIsInVzZXIiLCJKU09OIiwic3RyaW5naWZ5IiwiY2ZnIiwicHJvdmlkZXIiLCJtb2RlbCIsInN1bW1hcml6ZXJNb2RlbCIsInJlcyIsInJvbGUiLCJjb250ZW50IiwibWF4VG9rZW5zIiwidGVtcGVyYXR1cmUiLCJ0ZXh0IiwicGFyc2VkIiwicGFyc2UiLCJ0cmltIiwibGVuZ3RoIiwid29yZHMiLCJzcGxpdCIsInNsaWNlIiwiam9pbiIsImNvdE1hcmtlcnMiLCJsb3dlciIsInRvTG93ZXJDYXNlIiwic29tZSIsIm0iLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/summarizer.ts\n");

/***/ }),

/***/ "(rsc)/./src/repo/conversations.ts":
/*!***********************************!*\
  !*** ./src/repo/conversations.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendMessage: () => (/* binding */ appendMessage),\n/* harmony export */   completeConversation: () => (/* binding */ completeConversation),\n/* harmony export */   createConversation: () => (/* binding */ createConversation)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function createConversation(input) {\n    return _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.conversation.create({\n        data: {\n            agentId: input.agentId,\n            model: input.model,\n            systemPrompt: input.systemPrompt,\n            goal: input.goal,\n            messageLimit: input.messageLimit ?? 25,\n            runId: input.runId\n        }\n    });\n}\nasync function appendMessage(conversationId, data) {\n    return _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.$transaction(async (tx)=>{\n        const msg = await tx.message.create({\n            data: {\n                conversationId,\n                role: data.role,\n                content: data.content,\n                tokensIn: data.tokensIn,\n                tokensOut: data.tokensOut,\n                costUsd: data.costUsd\n            }\n        });\n        await tx.conversation.update({\n            where: {\n                id: conversationId\n            },\n            data: {\n                messageCount: {\n                    increment: 1\n                },\n                totalTokensIn: data.tokensIn ? {\n                    increment: data.tokensIn\n                } : undefined,\n                totalTokensOut: data.tokensOut ? {\n                    increment: data.tokensOut\n                } : undefined,\n                totalCostUsd: data.costUsd != null ? {\n                    increment: new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.Prisma.Decimal(data.costUsd)\n                } : undefined\n            }\n        });\n        return msg;\n    });\n}\nasync function completeConversation(conversationId, data) {\n    return _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.conversation.update({\n        where: {\n            id: conversationId\n        },\n        data: {\n            endedReason: data.endedReason,\n            goalReached: data.goalReached ?? false,\n            endedAt: data.endedAt ?? new Date()\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvcmVwby9jb252ZXJzYXRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUNFO0FBV2pDLGVBQWVFLG1CQUFtQkMsS0FBOEI7SUFDckUsT0FBT0gsK0NBQU1BLENBQUNJLFlBQVksQ0FBQ0MsTUFBTSxDQUFDO1FBQ2hDQyxNQUFNO1lBQ0pDLFNBQVNKLE1BQU1JLE9BQU87WUFDdEJDLE9BQU9MLE1BQU1LLEtBQUs7WUFDbEJDLGNBQWNOLE1BQU1NLFlBQVk7WUFDaENDLE1BQU1QLE1BQU1PLElBQUk7WUFDaEJDLGNBQWNSLE1BQU1RLFlBQVksSUFBSTtZQUNwQ0MsT0FBT1QsTUFBTVMsS0FBSztRQUNwQjtJQUNGO0FBQ0Y7QUFFTyxlQUFlQyxjQUNwQkMsY0FBc0IsRUFDdEJSLElBTUM7SUFFRCxPQUFPTiwrQ0FBTUEsQ0FBQ2UsWUFBWSxDQUFDLE9BQU9DO1FBQ2hDLE1BQU1DLE1BQU0sTUFBTUQsR0FBR0UsT0FBTyxDQUFDYixNQUFNLENBQUM7WUFDbENDLE1BQU07Z0JBQ0pRO2dCQUNBSyxNQUFNYixLQUFLYSxJQUFJO2dCQUNmQyxTQUFTZCxLQUFLYyxPQUFPO2dCQUNyQkMsVUFBVWYsS0FBS2UsUUFBUTtnQkFDdkJDLFdBQVdoQixLQUFLZ0IsU0FBUztnQkFDekJDLFNBQVNqQixLQUFLaUIsT0FBTztZQUN2QjtRQUNGO1FBQ0EsTUFBTVAsR0FBR1osWUFBWSxDQUFDb0IsTUFBTSxDQUFDO1lBQzNCQyxPQUFPO2dCQUFFQyxJQUFJWjtZQUFlO1lBQzVCUixNQUFNO2dCQUNKcUIsY0FBYztvQkFBRUMsV0FBVztnQkFBRTtnQkFDN0JDLGVBQWV2QixLQUFLZSxRQUFRLEdBQUc7b0JBQUVPLFdBQVd0QixLQUFLZSxRQUFRO2dCQUFDLElBQUlTO2dCQUM5REMsZ0JBQWdCekIsS0FBS2dCLFNBQVMsR0FBRztvQkFBRU0sV0FBV3RCLEtBQUtnQixTQUFTO2dCQUFDLElBQUlRO2dCQUNqRUUsY0FDRTFCLEtBQUtpQixPQUFPLElBQUksT0FBTztvQkFBRUssV0FBVyxJQUFJM0Isa0RBQU1BLENBQUNnQyxPQUFPLENBQUMzQixLQUFLaUIsT0FBTztnQkFBRSxJQUFJTztZQUM3RTtRQUNGO1FBQ0EsT0FBT2I7SUFDVDtBQUNGO0FBRU8sZUFBZWlCLHFCQUNwQnBCLGNBQXNCLEVBQ3RCUixJQUlDO0lBRUQsT0FBT04sK0NBQU1BLENBQUNJLFlBQVksQ0FBQ29CLE1BQU0sQ0FBQztRQUNoQ0MsT0FBTztZQUFFQyxJQUFJWjtRQUFlO1FBQzVCUixNQUFNO1lBQ0o2QixhQUFhN0IsS0FBSzZCLFdBQVc7WUFDN0JDLGFBQWE5QixLQUFLOEIsV0FBVyxJQUFJO1lBQ2pDQyxTQUFTL0IsS0FBSytCLE9BQU8sSUFBSSxJQUFJQztRQUMvQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZ2VudC13YXJzLXdlYi8uL3NyYy9yZXBvL2NvbnZlcnNhdGlvbnMudHM/NjdmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmlzbWEgfSBmcm9tIFwiQC9saWIvcHJpc21hXCI7XG5pbXBvcnQgeyBQcmlzbWEgfSBmcm9tIFwiQHByaXNtYS9jbGllbnRcIjtcblxudHlwZSBDcmVhdGVDb252ZXJzYXRpb25JbnB1dCA9IHtcbiAgYWdlbnRJZDogc3RyaW5nO1xuICBtb2RlbDogc3RyaW5nO1xuICBzeXN0ZW1Qcm9tcHQ/OiBzdHJpbmc7XG4gIGdvYWw/OiBzdHJpbmc7XG4gIG1lc3NhZ2VMaW1pdD86IG51bWJlcjtcbiAgcnVuSWQ/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ29udmVyc2F0aW9uKGlucHV0OiBDcmVhdGVDb252ZXJzYXRpb25JbnB1dCkge1xuICByZXR1cm4gcHJpc21hLmNvbnZlcnNhdGlvbi5jcmVhdGUoe1xuICAgIGRhdGE6IHtcbiAgICAgIGFnZW50SWQ6IGlucHV0LmFnZW50SWQsXG4gICAgICBtb2RlbDogaW5wdXQubW9kZWwsXG4gICAgICBzeXN0ZW1Qcm9tcHQ6IGlucHV0LnN5c3RlbVByb21wdCxcbiAgICAgIGdvYWw6IGlucHV0LmdvYWwsXG4gICAgICBtZXNzYWdlTGltaXQ6IGlucHV0Lm1lc3NhZ2VMaW1pdCA/PyAyNSxcbiAgICAgIHJ1bklkOiBpbnB1dC5ydW5JZCxcbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwcGVuZE1lc3NhZ2UoXG4gIGNvbnZlcnNhdGlvbklkOiBzdHJpbmcsXG4gIGRhdGE6IHtcbiAgICByb2xlOiBcInN5c3RlbVwiIHwgXCJ1c2VyXCIgfCBcImFzc2lzdGFudFwiIHwgXCJ0b29sXCI7XG4gICAgY29udGVudDogc3RyaW5nO1xuICAgIHRva2Vuc0luPzogbnVtYmVyO1xuICAgIHRva2Vuc091dD86IG51bWJlcjtcbiAgICBjb3N0VXNkPzogbnVtYmVyO1xuICB9LFxuKSB7XG4gIHJldHVybiBwcmlzbWEuJHRyYW5zYWN0aW9uKGFzeW5jICh0eCkgPT4ge1xuICAgIGNvbnN0IG1zZyA9IGF3YWl0IHR4Lm1lc3NhZ2UuY3JlYXRlKHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgY29udmVyc2F0aW9uSWQsXG4gICAgICAgIHJvbGU6IGRhdGEucm9sZSxcbiAgICAgICAgY29udGVudDogZGF0YS5jb250ZW50LFxuICAgICAgICB0b2tlbnNJbjogZGF0YS50b2tlbnNJbixcbiAgICAgICAgdG9rZW5zT3V0OiBkYXRhLnRva2Vuc091dCxcbiAgICAgICAgY29zdFVzZDogZGF0YS5jb3N0VXNkLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBhd2FpdCB0eC5jb252ZXJzYXRpb24udXBkYXRlKHtcbiAgICAgIHdoZXJlOiB7IGlkOiBjb252ZXJzYXRpb25JZCB9LFxuICAgICAgZGF0YToge1xuICAgICAgICBtZXNzYWdlQ291bnQ6IHsgaW5jcmVtZW50OiAxIH0sXG4gICAgICAgIHRvdGFsVG9rZW5zSW46IGRhdGEudG9rZW5zSW4gPyB7IGluY3JlbWVudDogZGF0YS50b2tlbnNJbiB9IDogdW5kZWZpbmVkLFxuICAgICAgICB0b3RhbFRva2Vuc091dDogZGF0YS50b2tlbnNPdXQgPyB7IGluY3JlbWVudDogZGF0YS50b2tlbnNPdXQgfSA6IHVuZGVmaW5lZCxcbiAgICAgICAgdG90YWxDb3N0VXNkOlxuICAgICAgICAgIGRhdGEuY29zdFVzZCAhPSBudWxsID8geyBpbmNyZW1lbnQ6IG5ldyBQcmlzbWEuRGVjaW1hbChkYXRhLmNvc3RVc2QpIH0gOiB1bmRlZmluZWQsXG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiBtc2c7XG4gIH0pO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcGxldGVDb252ZXJzYXRpb24oXG4gIGNvbnZlcnNhdGlvbklkOiBzdHJpbmcsXG4gIGRhdGE6IHtcbiAgICBlbmRlZFJlYXNvbj86IFwiZ29hbFwiIHwgXCJsaW1pdFwiIHwgXCJlcnJvclwiIHwgXCJtYW51YWxcIiB8IFwidGltZW91dFwiO1xuICAgIGdvYWxSZWFjaGVkPzogYm9vbGVhbjtcbiAgICBlbmRlZEF0PzogRGF0ZTtcbiAgfSxcbikge1xuICByZXR1cm4gcHJpc21hLmNvbnZlcnNhdGlvbi51cGRhdGUoe1xuICAgIHdoZXJlOiB7IGlkOiBjb252ZXJzYXRpb25JZCB9LFxuICAgIGRhdGE6IHtcbiAgICAgIGVuZGVkUmVhc29uOiBkYXRhLmVuZGVkUmVhc29uLFxuICAgICAgZ29hbFJlYWNoZWQ6IGRhdGEuZ29hbFJlYWNoZWQgPz8gZmFsc2UsXG4gICAgICBlbmRlZEF0OiBkYXRhLmVuZGVkQXQgPz8gbmV3IERhdGUoKSxcbiAgICB9LFxuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJwcmlzbWEiLCJQcmlzbWEiLCJjcmVhdGVDb252ZXJzYXRpb24iLCJpbnB1dCIsImNvbnZlcnNhdGlvbiIsImNyZWF0ZSIsImRhdGEiLCJhZ2VudElkIiwibW9kZWwiLCJzeXN0ZW1Qcm9tcHQiLCJnb2FsIiwibWVzc2FnZUxpbWl0IiwicnVuSWQiLCJhcHBlbmRNZXNzYWdlIiwiY29udmVyc2F0aW9uSWQiLCIkdHJhbnNhY3Rpb24iLCJ0eCIsIm1zZyIsIm1lc3NhZ2UiLCJyb2xlIiwiY29udGVudCIsInRva2Vuc0luIiwidG9rZW5zT3V0IiwiY29zdFVzZCIsInVwZGF0ZSIsIndoZXJlIiwiaWQiLCJtZXNzYWdlQ291bnQiLCJpbmNyZW1lbnQiLCJ0b3RhbFRva2Vuc0luIiwidW5kZWZpbmVkIiwidG90YWxUb2tlbnNPdXQiLCJ0b3RhbENvc3RVc2QiLCJEZWNpbWFsIiwiY29tcGxldGVDb252ZXJzYXRpb24iLCJlbmRlZFJlYXNvbiIsImdvYWxSZWFjaGVkIiwiZW5kZWRBdCIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/repo/conversations.ts\n");

/***/ }),

/***/ "(rsc)/./src/repo/runReports.ts":
/*!********************************!*\
  !*** ./src/repo/runReports.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   saveRunReport: () => (/* binding */ saveRunReport)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\nasync function saveRunReport(input) {\n    // In local/no-DB mode, keep an in-memory object per runId\n    if (process.env.E2E_MODE === \"1\" || process.env.LOCAL_MODE === \"1\") {\n        globalThis.__run_reports = globalThis.__run_reports || new Map();\n        const value = {\n            runId: input.runId,\n            agentId: input.agentId,\n            model: input.model,\n            systemPrompt: input.systemPrompt,\n            runCount: input.runCount,\n            failures: input.failures,\n            summary: input.summary,\n            revisedPrompt: input.revisedPrompt,\n            stats: input.stats\n        };\n        globalThis.__run_reports.set(input.runId, value);\n        return value;\n    }\n    try {\n        return await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.runReport.upsert({\n            where: {\n                runId: input.runId\n            },\n            update: {\n                agentId: input.agentId,\n                model: input.model,\n                systemPrompt: input.systemPrompt,\n                runCount: input.runCount,\n                failures: input.failures,\n                summary: input.summary,\n                revisedPrompt: input.revisedPrompt,\n                stats: input.stats\n            },\n            create: {\n                runId: input.runId,\n                agentId: input.agentId,\n                model: input.model,\n                systemPrompt: input.systemPrompt,\n                runCount: input.runCount,\n                failures: input.failures,\n                summary: input.summary,\n                revisedPrompt: input.revisedPrompt,\n                stats: input.stats\n            }\n        });\n    } catch (e) {\n        // Tolerate FK constraints in test or non-seeded environments; no-op persistence\n        const code = e?.code;\n        if (code === \"P2003\") {\n            return null;\n        }\n        throw e;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvcmVwby9ydW5SZXBvcnRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBRS9CLGVBQWVDLGNBQWNDLEtBVW5DO0lBQ0MsMERBQTBEO0lBQzFELElBQUlDLFFBQVFDLEdBQUcsQ0FBQ0MsUUFBUSxLQUFLLE9BQU9GLFFBQVFDLEdBQUcsQ0FBQ0UsVUFBVSxLQUFLLEtBQUs7UUFDakVDLFdBQW1CQyxhQUFhLEdBQUcsV0FBb0JBLGFBQWEsSUFBSSxJQUFJQztRQUM3RSxNQUFNQyxRQUFRO1lBQ1pDLE9BQU9ULE1BQU1TLEtBQUs7WUFDbEJDLFNBQVNWLE1BQU1VLE9BQU87WUFDdEJDLE9BQU9YLE1BQU1XLEtBQUs7WUFDbEJDLGNBQWNaLE1BQU1ZLFlBQVk7WUFDaENDLFVBQVViLE1BQU1hLFFBQVE7WUFDeEJDLFVBQVVkLE1BQU1jLFFBQVE7WUFDeEJDLFNBQVNmLE1BQU1lLE9BQU87WUFDdEJDLGVBQWVoQixNQUFNZ0IsYUFBYTtZQUNsQ0MsT0FBT2pCLE1BQU1pQixLQUFLO1FBQ3BCO1FBQ0NaLFdBQW1CQyxhQUFhLENBQUNZLEdBQUcsQ0FBQ2xCLE1BQU1TLEtBQUssRUFBRUQ7UUFDbkQsT0FBT0E7SUFDVDtJQUNBLElBQUk7UUFDRixPQUFPLE1BQU1WLCtDQUFNQSxDQUFDcUIsU0FBUyxDQUFDQyxNQUFNLENBQUM7WUFDbkNDLE9BQU87Z0JBQUVaLE9BQU9ULE1BQU1TLEtBQUs7WUFBQztZQUM1QmEsUUFBUTtnQkFDTlosU0FBU1YsTUFBTVUsT0FBTztnQkFDdEJDLE9BQU9YLE1BQU1XLEtBQUs7Z0JBQ2xCQyxjQUFjWixNQUFNWSxZQUFZO2dCQUNoQ0MsVUFBVWIsTUFBTWEsUUFBUTtnQkFDeEJDLFVBQVVkLE1BQU1jLFFBQVE7Z0JBQ3hCQyxTQUFTZixNQUFNZSxPQUFPO2dCQUN0QkMsZUFBZWhCLE1BQU1nQixhQUFhO2dCQUNsQ0MsT0FBT2pCLE1BQU1pQixLQUFLO1lBQ3BCO1lBQ0FNLFFBQVE7Z0JBQ05kLE9BQU9ULE1BQU1TLEtBQUs7Z0JBQ2xCQyxTQUFTVixNQUFNVSxPQUFPO2dCQUN0QkMsT0FBT1gsTUFBTVcsS0FBSztnQkFDbEJDLGNBQWNaLE1BQU1ZLFlBQVk7Z0JBQ2hDQyxVQUFVYixNQUFNYSxRQUFRO2dCQUN4QkMsVUFBVWQsTUFBTWMsUUFBUTtnQkFDeEJDLFNBQVNmLE1BQU1lLE9BQU87Z0JBQ3RCQyxlQUFlaEIsTUFBTWdCLGFBQWE7Z0JBQ2xDQyxPQUFPakIsTUFBTWlCLEtBQUs7WUFDcEI7UUFDRjtJQUNGLEVBQUUsT0FBT08sR0FBWTtRQUNuQixnRkFBZ0Y7UUFDaEYsTUFBTUMsT0FBUUQsR0FBV0M7UUFDekIsSUFBSUEsU0FBUyxTQUFTO1lBQ3BCLE9BQU87UUFDVDtRQUNBLE1BQU1EO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2FnZW50LXdhcnMtd2ViLy4vc3JjL3JlcG8vcnVuUmVwb3J0cy50cz81ZjVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaXNtYSB9IGZyb20gXCJAL2xpYi9wcmlzbWFcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhdmVSdW5SZXBvcnQoaW5wdXQ6IHtcbiAgcnVuSWQ6IHN0cmluZztcbiAgYWdlbnRJZDogc3RyaW5nO1xuICBtb2RlbDogc3RyaW5nO1xuICBzeXN0ZW1Qcm9tcHQ/OiBzdHJpbmc7XG4gIHJ1bkNvdW50OiBudW1iZXI7XG4gIGZhaWx1cmVzPzogdW5rbm93bjtcbiAgc3VtbWFyeT86IHN0cmluZztcbiAgcmV2aXNlZFByb21wdD86IHN0cmluZztcbiAgc3RhdHM/OiB1bmtub3duO1xufSkge1xuICAvLyBJbiBsb2NhbC9uby1EQiBtb2RlLCBrZWVwIGFuIGluLW1lbW9yeSBvYmplY3QgcGVyIHJ1bklkXG4gIGlmIChwcm9jZXNzLmVudi5FMkVfTU9ERSA9PT0gXCIxXCIgfHwgcHJvY2Vzcy5lbnYuTE9DQUxfTU9ERSA9PT0gXCIxXCIpIHtcbiAgICAoZ2xvYmFsVGhpcyBhcyBhbnkpLl9fcnVuX3JlcG9ydHMgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLl9fcnVuX3JlcG9ydHMgfHwgbmV3IE1hcDxzdHJpbmcsIGFueT4oKTtcbiAgICBjb25zdCB2YWx1ZSA9IHtcbiAgICAgIHJ1bklkOiBpbnB1dC5ydW5JZCxcbiAgICAgIGFnZW50SWQ6IGlucHV0LmFnZW50SWQsXG4gICAgICBtb2RlbDogaW5wdXQubW9kZWwsXG4gICAgICBzeXN0ZW1Qcm9tcHQ6IGlucHV0LnN5c3RlbVByb21wdCxcbiAgICAgIHJ1bkNvdW50OiBpbnB1dC5ydW5Db3VudCxcbiAgICAgIGZhaWx1cmVzOiBpbnB1dC5mYWlsdXJlcyBhcyBhbnksXG4gICAgICBzdW1tYXJ5OiBpbnB1dC5zdW1tYXJ5LFxuICAgICAgcmV2aXNlZFByb21wdDogaW5wdXQucmV2aXNlZFByb21wdCxcbiAgICAgIHN0YXRzOiBpbnB1dC5zdGF0cyBhcyBhbnksXG4gICAgfTtcbiAgICAoZ2xvYmFsVGhpcyBhcyBhbnkpLl9fcnVuX3JlcG9ydHMuc2V0KGlucHV0LnJ1bklkLCB2YWx1ZSk7XG4gICAgcmV0dXJuIHZhbHVlIGFzIGFueTtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBhd2FpdCBwcmlzbWEucnVuUmVwb3J0LnVwc2VydCh7XG4gICAgICB3aGVyZTogeyBydW5JZDogaW5wdXQucnVuSWQgfSxcbiAgICAgIHVwZGF0ZToge1xuICAgICAgICBhZ2VudElkOiBpbnB1dC5hZ2VudElkLFxuICAgICAgICBtb2RlbDogaW5wdXQubW9kZWwsXG4gICAgICAgIHN5c3RlbVByb21wdDogaW5wdXQuc3lzdGVtUHJvbXB0LFxuICAgICAgICBydW5Db3VudDogaW5wdXQucnVuQ291bnQsXG4gICAgICAgIGZhaWx1cmVzOiBpbnB1dC5mYWlsdXJlcyBhcyBhbnksXG4gICAgICAgIHN1bW1hcnk6IGlucHV0LnN1bW1hcnksXG4gICAgICAgIHJldmlzZWRQcm9tcHQ6IGlucHV0LnJldmlzZWRQcm9tcHQsXG4gICAgICAgIHN0YXRzOiBpbnB1dC5zdGF0cyBhcyBhbnksXG4gICAgICB9LFxuICAgICAgY3JlYXRlOiB7XG4gICAgICAgIHJ1bklkOiBpbnB1dC5ydW5JZCxcbiAgICAgICAgYWdlbnRJZDogaW5wdXQuYWdlbnRJZCxcbiAgICAgICAgbW9kZWw6IGlucHV0Lm1vZGVsLFxuICAgICAgICBzeXN0ZW1Qcm9tcHQ6IGlucHV0LnN5c3RlbVByb21wdCxcbiAgICAgICAgcnVuQ291bnQ6IGlucHV0LnJ1bkNvdW50LFxuICAgICAgICBmYWlsdXJlczogaW5wdXQuZmFpbHVyZXMgYXMgYW55LFxuICAgICAgICBzdW1tYXJ5OiBpbnB1dC5zdW1tYXJ5LFxuICAgICAgICByZXZpc2VkUHJvbXB0OiBpbnB1dC5yZXZpc2VkUHJvbXB0LFxuICAgICAgICBzdGF0czogaW5wdXQuc3RhdHMgYXMgYW55LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZTogdW5rbm93bikge1xuICAgIC8vIFRvbGVyYXRlIEZLIGNvbnN0cmFpbnRzIGluIHRlc3Qgb3Igbm9uLXNlZWRlZCBlbnZpcm9ubWVudHM7IG5vLW9wIHBlcnNpc3RlbmNlXG4gICAgY29uc3QgY29kZSA9IChlIGFzIGFueSk/LmNvZGUgYXMgc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIGlmIChjb2RlID09PSBcIlAyMDAzXCIpIHtcbiAgICAgIHJldHVybiBudWxsIGFzIGFueTtcbiAgICB9XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInByaXNtYSIsInNhdmVSdW5SZXBvcnQiLCJpbnB1dCIsInByb2Nlc3MiLCJlbnYiLCJFMkVfTU9ERSIsIkxPQ0FMX01PREUiLCJnbG9iYWxUaGlzIiwiX19ydW5fcmVwb3J0cyIsIk1hcCIsInZhbHVlIiwicnVuSWQiLCJhZ2VudElkIiwibW9kZWwiLCJzeXN0ZW1Qcm9tcHQiLCJydW5Db3VudCIsImZhaWx1cmVzIiwic3VtbWFyeSIsInJldmlzZWRQcm9tcHQiLCJzdGF0cyIsInNldCIsInJ1blJlcG9ydCIsInVwc2VydCIsIndoZXJlIiwidXBkYXRlIiwiY3JlYXRlIiwiZSIsImNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/repo/runReports.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/zod","vendor-chunks/formdata-node","vendor-chunks/bullmq","vendor-chunks/openai","vendor-chunks/semver","vendor-chunks/ioredis","vendor-chunks/form-data-encoder","vendor-chunks/node-fetch","vendor-chunks/msgpackr","vendor-chunks/cron-parser","vendor-chunks/debug","vendor-chunks/agentkeepalive","vendor-chunks/redis-errors","vendor-chunks/standard-as-callback","vendor-chunks/redis-parser","vendor-chunks/@ioredis","vendor-chunks/web-streams-polyfill","vendor-chunks/tslib","vendor-chunks/supports-color","vendor-chunks/node-abort-controller","vendor-chunks/ms","vendor-chunks/luxon","vendor-chunks/lodash.isarguments","vendor-chunks/lodash.defaults","vendor-chunks/humanize-ms","vendor-chunks/has-flag","vendor-chunks/event-target-shim","vendor-chunks/denque","vendor-chunks/cluster-key-slot","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbattles%2Fstart%2Froute&page=%2Fapi%2Fbattles%2Fstart%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbattles%2Fstart%2Froute.ts&appDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbaramsalem%2Fagents-repo%2Fagents%2Fsrc%2Fagents_wars%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();