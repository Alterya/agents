exports.id=505,exports.ids=[505],exports.modules={4665:e=>{function t(e){return Promise.resolve().then(()=>{var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}t.keys=()=>[],t.resolve=t,t.id=4665,e.exports=t},5844:(e,t,r)=>{"use strict";let n;r.d(t,{i:()=>i});var o=r(7410);let s=e=>o.z.preprocess(e=>"string"==typeof e&&0===e.trim().length?void 0:e,e.optional()),a=o.z.object({OPENAI_API_KEY:s(o.z.string().trim().min(1)),OPENROUTER_API_KEY:s(o.z.string().trim().min(1)),OPENROUTER_SITE:s(o.z.string().trim()),ALLOWED_MODELS:s(o.z.string().trim()),SUMMARIZER_MODEL:s(o.z.string().trim()),MAX_TOKENS_PER_CALL:o.z.coerce.number().int().positive().default(512),MAX_MESSAGES_PER_CONVO:o.z.coerce.number().int().positive().default(25),RATE_LIMIT_ENABLED:o.z.union([o.z.string(),o.z.boolean()]).transform(e=>"string"==typeof e?"false"!==e.toLowerCase():!!e).default(!0),RATE_LIMIT_RPM:o.z.coerce.number().int().positive().default(60),REQUEST_TIMEOUT_MS:o.z.coerce.number().int().positive().default(6e4),MAX_USD_PER_CONVO:o.z.coerce.number().nonnegative().optional()}).refine(e=>!!(e.OPENAI_API_KEY||e.OPENROUTER_API_KEY),"At least one provider key must be set: OPENAI_API_KEY or OPENROUTER_API_KEY");function i(){if(n)return n;let e={...process.env},t=a.parse(e);return n={openaiApiKey:t.OPENAI_API_KEY||void 0,openrouterApiKey:t.OPENROUTER_API_KEY||void 0,openrouterSite:t.OPENROUTER_SITE||void 0,allowedModels:t.ALLOWED_MODELS?t.ALLOWED_MODELS.split(",").map(e=>e.trim()).filter(Boolean):[],summarizerModel:t.SUMMARIZER_MODEL||void 0,maxTokensPerCall:t.MAX_TOKENS_PER_CALL,maxMessagesPerConversation:t.MAX_MESSAGES_PER_CONVO,rateLimitEnabled:t.RATE_LIMIT_ENABLED,rateLimitRpm:t.RATE_LIMIT_RPM,requestTimeoutMs:t.REQUEST_TIMEOUT_MS,maxUsdPerConversation:t.MAX_USD_PER_CONVO,redisUrl:e.REDIS_URL||void 0}}},7546:(e,t,r)=>{"use strict";r.d(t,{C3:()=>m,Cq:()=>i,Zn:()=>u,gK:()=>l,y:()=>d});let n=new Map,o=new Map,s=new Map,a=new Map;function i(e,t,r){let o=Date.now(),i={id:e,type:t,status:"pending",createdAt:o,updatedAt:o};return n.set(e,i),r&&(s.set(e,r),a.set(r,(a.get(r)??0)+1)),i}function u(e){return n.get(e)}function l(e,t){let r=n.get(e);if(!r)return;let i={...r,...t,updatedAt:Date.now()};n.set(e,i);let u=o.get(e);if(u)for(let e of u)e(i);if("succeeded"===i.status||"failed"===i.status){let t=s.get(e);if(t){let r=a.get(t)??0;a.set(t,Math.max(0,r-1)),s.delete(e)}setTimeout(()=>{n.delete(e),o.delete(e)},250)}return i}function d(e,t){let r=o.get(e)??new Set;return r.add(t),o.set(e,r),()=>{let r=o.get(e);r&&(r.delete(t),0===r.size&&o.delete(e))}}function m(e,t){return(a.get(e)??0)<t}},8907:(e,t,r)=>{"use strict";r.d(t,{Mh:()=>o,Ow:()=>l,Sv:()=>s,_v:()=>u,hb:()=>i});var n=r(5844);class o extends Error{constructor(e){super(e),this.name="GuardrailsError"}}function s(e){let t=(0,n.i)().maxTokensPerCall;if((e.requestedMaxTokens??t)>t)throw new o(`maxTokens exceeds cap (${e.requestedMaxTokens} > ${t})`);let r=(0,n.i)().maxMessagesPerConversation;if(e.messageCount>r)throw new o(`message count exceeds cap (${e.messageCount} > ${r})`);let s=new Set((0,n.i)().allowedModels);if(s.size>0&&!s.has(e.model))throw new o(`model not allowed: ${e.model}`)}let a=new Map;function i(e){let t=(0,n.i)();if(!t.rateLimitEnabled)return;let r=t.rateLimitRpm,s=Date.now(),i=a.get(e);if(!i||s-i.windowStartMs>=6e4){a.set(e,{count:1,windowStartMs:s});return}if(i.count>=r)throw new o("rate limit exceeded");i.count+=1}async function u(e){await new Promise(t=>setTimeout(t,e))}function l(e){return 250+500*e+Math.floor(100*Math.random())}},3280:(e,t,r)=>{"use strict";r.d(t,{W:()=>a});var n=r(4214),o=r(8907),s=r(5844);async function a(e,t){let r;if("1"===process.env.E2E_MODE){let t=[...e].reverse().find(e=>"user"===e.role);return{text:t?.content?`E2E: ${t.content}`:"E2E: ok",usage:{inputTokens:10,outputTokens:20},raw:{}}}(0,o.Sv)({requestedMaxTokens:t.maxTokens,messageCount:e.length,model:t.model}),(0,o.hb)(`${t.provider}:${t.model}`);let a=(0,s.i)(),i="openrouter"===t.provider,u=new n.ZP({apiKey:i?a.openrouterApiKey:a.openaiApiKey,baseURL:i?"https://openrouter.ai/api/v1":void 0}),l=i?{"HTTP-Referer":a.openrouterSite||"","X-Title":"Agent Wars"}:void 0;if(t.stream){let r=await u.chat.completions.create({model:t.model,messages:e,max_tokens:t.maxTokens??512,temperature:t.temperature??.2,stop:t.stop,stream:!0,extra_headers:l}),n="";for await(let e of r){let t=e?.choices?.[0]?.delta?.content;t&&(n+=t)}return{text:n,raw:r}}for(let n=0;n<3;n++)try{let r=await u.chat.completions.create({model:t.model,messages:e,max_tokens:t.maxTokens??512,temperature:t.temperature??.2,stop:t.stop,extra_headers:l}),n=r.choices?.[0]?.message?.content??"",o=r.usage?{inputTokens:r.usage.prompt_tokens??0,outputTokens:r.usage.completion_tokens??0}:void 0;return{text:n,usage:o,raw:r}}catch(t){r=t;let e=t?.status??t?.response?.status;if(n<2&&(429===e||e>=500&&e<=599)){await (0,o._v)((0,o.Ow)(n));continue}throw t}throw r}},6772:(e,t,r)=>{"use strict";r.d(t,{Q:()=>s,U:()=>a});let n={},o={openai:{inputPer1k:.002,outputPer1k:.006},openrouter:{inputPer1k:.0015,outputPer1k:.005}};async function s(e,t){let r=`${e}:${t}`,s=Date.now(),a=n[r];if(a&&s-a.at<36e5)return a.price;let i=o[e],u=t.toLowerCase(),l=i;return u.includes("gpt-4")?l={inputPer1k:3*i.inputPer1k,outputPer1k:3*i.outputPer1k}:(u.includes("mini")||u.includes("small"))&&(l={inputPer1k:.6*i.inputPer1k,outputPer1k:.6*i.outputPer1k}),n[r]={price:l,at:s},l}function a(e,t,r){let s=r?.inputTokens??0,a=r?.outputTokens??0,i=`${e}:${t}`,u=n[i]?.price??o[e];return{usdIn:s/1e3*u.inputPer1k,usdOut:a/1e3*u.outputPer1k}}},3538:(e,t,r)=>{"use strict";r.d(t,{_:()=>o});var n=r(3524);let o=global.prisma??new n.PrismaClient({log:["error","warn"]})},7349:(e,t,r)=>{"use strict";function n(){return"undefined"!=typeof process&&!!process.env.REDIS_URL}async function o(e){if(!n())return null;let{Queue:t}=await Promise.resolve().then(r.bind(r,6608)),o={connection:{url:process.env.REDIS_URL}},s=new t(e.queueName,o);return{id:(await s.add(e.queueName,e.payload,{removeOnComplete:{age:86400,count:1e3},removeOnFail:{age:604800,count:1e3}})).id}}r.d(t,{SP:()=>o,n4:()=>n}),r(6608)},5884:(e,t,r)=>{"use strict";r.d(t,{m:()=>g,$:()=>v});var n=r(3280),o=r(3538),s=r(3524);async function a(e){return o._.conversation.create({data:{agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,goal:e.goal,messageLimit:e.messageLimit??25,runId:e.runId}})}async function i(e,t){return o._.$transaction(async r=>{let n=await r.message.create({data:{conversationId:e,role:t.role,content:t.content,tokensIn:t.tokensIn,tokensOut:t.tokensOut,costUsd:t.costUsd}});return await r.conversation.update({where:{id:e},data:{messageCount:{increment:1},totalTokensIn:t.tokensIn?{increment:t.tokensIn}:void 0,totalTokensOut:t.tokensOut?{increment:t.tokensOut}:void 0,totalCostUsd:null!=t.costUsd?{increment:new s.Prisma.Decimal(t.costUsd)}:void 0}}),n})}async function u(e,t){return o._.conversation.update({where:{id:e},data:{endedReason:t.endedReason,goalReached:t.goalReached??!1,endedAt:t.endedAt??new Date}})}async function l(e){if("1"===process.env.E2E_MODE||"1"===process.env.LOCAL_MODE){globalThis.__run_reports=globalThis.__run_reports||new Map;let t={runId:e.runId,agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,runCount:e.runCount,failures:e.failures,summary:e.summary,revisedPrompt:e.revisedPrompt,stats:e.stats};return globalThis.__run_reports.set(e.runId,t),t}try{return await o._.runReport.upsert({where:{runId:e.runId},update:{agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,runCount:e.runCount,failures:e.failures,summary:e.summary,revisedPrompt:e.revisedPrompt,stats:e.stats},create:{runId:e.runId,agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,runCount:e.runCount,failures:e.failures,summary:e.summary,revisedPrompt:e.revisedPrompt,stats:e.stats}})}catch(e){if("P2003"===e?.code)return null;throw e}}var d=r(5844);let m=`You are PromptBro Analyst. Given multiple conversations with outcomes and failure cases, produce STRICT JSON with keys: summary (string), revisedPrompt (string), rationale (string).

Hard constraints:
- rationale must be concise (<=100 words)
- no hidden reasoning or chain-of-thought; only the three fields above
- if any required fact is missing, set the field value to "information unavailable"`;async function c(e,t){let r;if("1"===process.env.E2E_MODE)return{summary:`E2E summary: ${e.stats.succeeded} ok / ${e.stats.failed} failed`,revisedPrompt:"E2E revised prompt",rationale:"E2E rationale"};let o=JSON.stringify(e),s=(0,d.i)(),a=t?.provider??"openai",i=s.summarizerModel??t?.model??"gpt-4o-mini",u=(await (0,n.W)([{role:"system",content:m},{role:"user",content:o}],{provider:a,model:i,maxTokens:512,temperature:.2})).text||"";try{r=JSON.parse(u)}catch{r={}}let l="string"==typeof r.summary&&r.summary.trim().length>0?r.summary:"information unavailable",c="string"==typeof r.revisedPrompt&&r.revisedPrompt.trim().length>0?r.revisedPrompt:"information unavailable",p="string"==typeof r.rationale&&r.rationale.trim().length>0?r.rationale:"information unavailable";if("information unavailable"!==p){let e=p.trim().split(/\s+/);e.length>100&&(p=e.slice(0,100).join(" ")+" â€¦")}if("information unavailable"!==p){let e=p.toLowerCase();["chain-of-thought","reasoning steps:","step-by-step","let's think","therefore","because"].some(t=>e.includes(t))&&(p="information unavailable")}return{summary:l,revisedPrompt:c,rationale:p}}var p=r(6772);async function f(e,t,r){try{await (0,p.Q)(e,t)}catch{}return(0,p.U)(e,t,r)}async function g(e,t,r){let o=(0,d.i)(),s=null;try{s=(await a({agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,goal:e.goal,messageLimit:e.messageLimit,runId:e.runId})).id}catch{}let l={usdIn:0,usdOut:0,inputTokens:0,outputTokens:0},m=[];if(e.systemPrompt&&m.push({role:"system",content:e.systemPrompt}),e.userMessage){if(s)try{await i(s,{role:"user",content:e.userMessage})}catch{}m.push({role:"user",content:e.userMessage})}let c=!1,p="limit",g=e.messageLimit??25,v=o.maxUsdPerConversation;for(;;){if(r?.aborted){p="timeout"===r.reason?"timeout":"manual";break}if(m.length>=g){p="limit";break}let o=await (0,n.W)(m,{provider:e.provider,model:e.model,maxTokens:e.maxTokens,temperature:e.temperature}),a=o.text??"",u=o.usage,{usdIn:d,usdOut:E}=await f(e.provider,e.model,u);l.usdIn+=d,l.usdOut+=E,l.inputTokens+=u?.inputTokens??0,l.outputTokens+=u?.outputTokens??0;let P=d+E;if(s)try{await i(s,{role:"assistant",content:a,tokensIn:u?.inputTokens,tokensOut:u?.outputTokens,costUsd:P})}catch{}if(m.push({role:"assistant",content:a}),a&&t?.(a),e.goal&&a.toLowerCase().includes(e.goal.toLowerCase())){c=!0,p="goal";break}if(!e.userMessage||"number"==typeof v&&v>=0&&l.usdIn+l.usdOut>=v){p="limit";break}if(r?.aborted){p="timeout"===r.reason?"timeout":"manual";break}}if(s)try{await u(s,{endedReason:p,goalReached:c})}catch{}return{conversationId:s??"",goalReached:c,endedReason:p,messageCount:m.length-(e.systemPrompt?1:0)}}async function v(e){if("1"===process.env.E2E_MODE){let t=e.runs;return{runId:e.runId,total:t,succeeded:t,failed:0,conversationIds:[]}}let t=Array.from({length:e.runs}).map((t,r)=>g({runId:`${e.runId}-${r+1}`,agentId:e.agentId,provider:e.provider,model:e.model,systemPrompt:e.systemPrompt,userMessage:e.userMessage})),r=await Promise.allSettled(t),n=0,s=[],a=[];for(let e of r)"fulfilled"===e.status?(n+=1,a.push(e.value.conversationId)):s.push({error:String(e.reason)});let i=e.runs,u=i-n,d={conversations:await Promise.all(a.map(async t=>{try{let r=await o._.conversation.findUnique({where:{id:t},select:{goal:!0,goalReached:!0,endedReason:!0}}),n=await o._.message.findMany({where:{conversationId:t},orderBy:{createdAt:"asc"},select:{role:!0,content:!0}}),s=n.filter(e=>"system"===e.role||"user"===e.role).slice(0,2),a=n.filter(e=>"assistant"===e.role),i=a.slice(Math.max(0,a.length-2)),u=[...s,...i];return{id:t,model:e.model,goal:r?.goal??void 0,goalReached:!!r?.goalReached,endedReason:r?.endedReason??null,messages:u}}catch{return{id:t,model:e.model,goal:void 0,goalReached:!1,endedReason:null,messages:[]}}})),stats:{succeeded:n,failed:u}},m="",p="",f="";try{let t=await c(d,{provider:e.provider,model:e.model});m=t.summary,p=t.revisedPrompt,f=t.rationale}catch{}return await l({runId:e.runId,agentId:e.agentId,model:e.model,systemPrompt:e.systemPrompt,runCount:i,failures:s,summary:m,revisedPrompt:p,stats:{succeeded:n,failed:u,conversationIds:a,rationale:f}}),{runId:e.runId,total:i,succeeded:n,failed:u,conversationIds:a}}}};